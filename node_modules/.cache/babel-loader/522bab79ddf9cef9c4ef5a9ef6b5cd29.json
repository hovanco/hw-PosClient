{"ast":null,"code":"import { EDeliveryDiscountBy } from '../../../collections/order';\nexport const totalPriceProduct = products => products.reduce((value, product) => product.price * product.count + value, 0);\nexport const paymentValues = payments => payments.map(payment => {\n  return Number(payment.value);\n});\nexport const totalPayment = payments => {\n  return paymentValues(payments).reduce((value, item) => value + item, 0);\n};\nexport const feeForReceiver = ({\n  products,\n  payments,\n  shipment\n}) => {\n  const total = totalPayment(payments) - (totalPriceProduct(products) + shipment);\n  return total;\n};\nexport const getShipmentFeeForCustomer = ({\n  shipmentFeeForCustomer,\n  shipmentFee\n}) => {\n  if (shipmentFeeForCustomer && shipmentFeeForCustomer > 0) {\n    return shipmentFeeForCustomer;\n  }\n\n  return shipmentFee || 0;\n};\nexport const getValueDiscount = ({\n  products,\n  discount,\n  discountBy\n}) => {\n  if (!discount || discount === 0) return 0;\n  if (discountBy === EDeliveryDiscountBy.Money) return discount;\n  const totalPrice = totalPriceProduct(products);\n  return totalPrice * discount / 100;\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/ultils/order.ts"],"names":["EDeliveryDiscountBy","totalPriceProduct","products","reduce","value","product","price","count","paymentValues","payments","map","payment","Number","totalPayment","item","feeForReceiver","shipment","total","getShipmentFeeForCustomer","shipmentFeeForCustomer","shipmentFee","getValueDiscount","discount","discountBy","Money","totalPrice"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,4BAApC;AAGA,OAAO,MAAMC,iBAAiB,GAAIC,QAAD,IAC7BA,QAAQ,CAACC,MAAT,CACI,CAACC,KAAD,EAAgBC,OAAhB,KAA0CA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,KAAxB,GAAgCH,KAD9E,EAEI,CAFJ,CADG;AAKP,OAAO,MAAMI,aAAa,GAAIC,QAAD,IACzBA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAsB;AAC/B,SAAOC,MAAM,CAACD,OAAO,CAACP,KAAT,CAAb;AACH,CAFD,CADG;AAKP,OAAO,MAAMS,YAAY,GAAIJ,QAAD,IAAiC;AACzD,SAAOD,aAAa,CAACC,QAAD,CAAb,CAAwBN,MAAxB,CAA+B,CAACC,KAAD,EAAgBU,IAAhB,KAAiCV,KAAK,GAAGU,IAAxE,EAA8E,CAA9E,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC3Bb,EAAAA,QAD2B;AAE3BO,EAAAA,QAF2B;AAG3BO,EAAAA;AAH2B,CAAD,KAQhB;AACV,QAAMC,KAAK,GAAGJ,YAAY,CAACJ,QAAD,CAAZ,IAA0BR,iBAAiB,CAACC,QAAD,CAAjB,GAA8Bc,QAAxD,CAAd;AAEA,SAAOC,KAAP;AACH,CAZM;AAcP,OAAO,MAAMC,yBAAyB,GAAG,CAAC;AACtCC,EAAAA,sBADsC;AAEtCC,EAAAA;AAFsC,CAAD,KAM3B;AACV,MAAID,sBAAsB,IAAIA,sBAAsB,GAAG,CAAvD,EAA0D;AACtD,WAAOA,sBAAP;AACH;;AAED,SAAOC,WAAW,IAAI,CAAtB;AACH,CAZM;AAcP,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC7BnB,EAAAA,QAD6B;AAE7BoB,EAAAA,QAF6B;AAG7BC,EAAAA;AAH6B,CAAD,KAQlB;AACV,MAAI,CAACD,QAAD,IAAaA,QAAQ,KAAK,CAA9B,EAAiC,OAAO,CAAP;AACjC,MAAIC,UAAU,KAAKvB,mBAAmB,CAACwB,KAAvC,EAA8C,OAAOF,QAAP;AAE9C,QAAMG,UAAU,GAAGxB,iBAAiB,CAACC,QAAD,CAApC;AAEA,SAAQuB,UAAU,GAAGH,QAAd,GAA0B,GAAjC;AACH,CAfM","sourcesContent":["import { EDeliveryDiscountBy } from '../../../collections/order';\nimport { Payment, ProductState } from '../pages/sales-counters/state/interface';\n\nexport const totalPriceProduct = (products: ProductState[]): number =>\n    products.reduce(\n        (value: number, product: ProductState) => product.price * product.count + value,\n        0\n    );\nexport const paymentValues = (payments: Payment[]): number[] =>\n    payments.map((payment: Payment) => {\n        return Number(payment.value);\n    });\n\nexport const totalPayment = (payments: Payment[]): number => {\n    return paymentValues(payments).reduce((value: number, item: number) => value + item, 0);\n};\n\nexport const feeForReceiver = ({\n    products,\n    payments,\n    shipment,\n}: {\n    products: ProductState[];\n    payments: Payment[];\n    shipment: number;\n}): number => {\n    const total = totalPayment(payments) - (totalPriceProduct(products) + shipment);\n\n    return total;\n};\n\nexport const getShipmentFeeForCustomer = ({\n    shipmentFeeForCustomer,\n    shipmentFee,\n}: {\n    shipmentFeeForCustomer?: number;\n    shipmentFee?: number;\n}): number => {\n    if (shipmentFeeForCustomer && shipmentFeeForCustomer > 0) {\n        return shipmentFeeForCustomer;\n    }\n\n    return shipmentFee || 0;\n};\n\nexport const getValueDiscount = ({\n    products,\n    discount,\n    discountBy,\n}: {\n    products: any[];\n    discount?: number;\n    discountBy?: EDeliveryDiscountBy;\n}): number => {\n    if (!discount || discount === 0) return 0;\n    if (discountBy === EDeliveryDiscountBy.Money) return discount;\n\n    const totalPrice = totalPriceProduct(products);\n\n    return (totalPrice * discount) / 100;\n};\n"]},"metadata":{},"sourceType":"module"}