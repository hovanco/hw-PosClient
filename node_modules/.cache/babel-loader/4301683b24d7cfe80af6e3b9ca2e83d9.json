{"ast":null,"code":"import { types } from './types';\nexport const initialState = {\n  products: [],\n  payments: [],\n  customer: undefined,\n  shipment: 0,\n  customerNote: undefined,\n  moneyCustomer: 0,\n  isEdit: false,\n  delivered: false,\n  sale: false,\n  isRestrictAction: false,\n  createdBy: undefined\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case types.ADD_PRODUCT:\n      {\n        const product = state.products.find(product => product._id === action.payload._id);\n\n        if (product) {\n          state.products = state.products.map(product => {\n            if (product._id === action.payload._id) return { ...product,\n              count: product.count + 1\n            };\n            return product;\n          });\n        } else {\n          state.products.unshift({ ...action.payload,\n            count: 1\n          });\n        }\n\n        if (!state.isEdit) {\n          state.isEdit = true;\n        }\n\n        return;\n      }\n\n    case types.REMOVE_PRODUCT:\n      state.products = state.products.filter(product => product._id !== action.payload._id);\n\n      if (!state.isEdit) {\n        state.isEdit = true;\n      }\n\n      return;\n\n    case types.ADD_CUSTOMER:\n      state.customer = action.payload;\n\n      if (!state.isEdit) {\n        state.isEdit = true;\n      }\n\n      return;\n\n    case types.UPDATE_QUANTITY:\n      state.products = state.products.map(product => {\n        if (product._id === action.payload._id) return action.payload;\n        return product;\n      });\n      return;\n\n    case types.ADD_PAYMENT:\n      state.payments.push(action.payload);\n\n      if (!state.isEdit) {\n        state.isEdit = true;\n      }\n\n      return;\n\n    case types.UPDATE_PAYMENT:\n      state.payments = state.payments.map(payment => {\n        if (payment.type === action.payload.type) return action.payload;\n        return payment;\n      });\n\n      if (!state.isEdit) {\n        state.isEdit = true;\n      }\n\n      return;\n\n    case types.REMOVE_PAYMENT:\n      {\n        state.payments = state.payments.filter(payment => payment.type !== action.payload.type);\n\n        if (!state.isEdit) {\n          state.isEdit = true;\n        }\n\n        return;\n      }\n\n    case types.ADD_CUSTOMER_NOTE:\n      state.customerNote = action.payload;\n\n      if (!state.isEdit) {\n        state.isEdit = true;\n      }\n\n      return;\n\n    case types.CHANGE_DELIVERED:\n      state.delivered = action.payload;\n      return;\n\n    case types.CHANGE_SALE:\n      state.sale = action.payload;\n      return;\n\n    case types.ADD_SHIPMENT:\n      state.shipment = action.payload;\n\n      if (!state.isEdit) {\n        state.isEdit = true;\n      }\n\n      return;\n\n    case types.CHANGE_IS_RESTRICT_ACTION:\n      {\n        state.isRestrictAction = action.payload;\n        return;\n      }\n\n    case types.RESET:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/pages/sales-counters/state/reducer.ts"],"names":["types","initialState","products","payments","customer","undefined","shipment","customerNote","moneyCustomer","isEdit","delivered","sale","isRestrictAction","createdBy","reducer","state","action","type","ADD_PRODUCT","product","find","_id","payload","map","count","unshift","REMOVE_PRODUCT","filter","ADD_CUSTOMER","UPDATE_QUANTITY","ADD_PAYMENT","push","UPDATE_PAYMENT","payment","REMOVE_PAYMENT","ADD_CUSTOMER_NOTE","CHANGE_DELIVERED","CHANGE_SALE","ADD_SHIPMENT","CHANGE_IS_RESTRICT_ACTION","RESET"],"mappings":"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","sourcesContent":["import { IState, Payment } from './interface';\nimport { types } from './types';\n\nexport const initialState = {\n    products: [],\n    payments: [],\n    customer: undefined,\n    shipment: 0,\n    customerNote: undefined,\n    moneyCustomer: 0,\n    isEdit: false,\n    delivered: false,\n    sale: false,\n    isRestrictAction: false,\n    createdBy: undefined,\n};\n\ninterface IAction {\n    type: string;\n    payload: any;\n}\n\nconst reducer = (state: IState, action: IAction) => {\n    switch (action.type) {\n        case types.ADD_PRODUCT: {\n            const product = state.products.find((product) => product._id === action.payload._id);\n\n            if (product) {\n                state.products = state.products.map((product) => {\n                    if (product._id === action.payload._id)\n                        return { ...product, count: product.count + 1 };\n                    return product;\n                });\n            } else {\n                state.products.unshift({ ...action.payload, count: 1 });\n            }\n\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n\n            return;\n        }\n\n        case types.REMOVE_PRODUCT:\n            state.products = state.products.filter((product) => product._id !== action.payload._id);\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n            return;\n\n        case types.ADD_CUSTOMER:\n            state.customer = action.payload;\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n            return;\n\n        case types.UPDATE_QUANTITY:\n            state.products = state.products.map((product) => {\n                if (product._id === action.payload._id) return action.payload;\n                return product;\n            });\n\n            return;\n\n        case types.ADD_PAYMENT:\n            state.payments.push(action.payload);\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n            return;\n\n        case types.UPDATE_PAYMENT:\n            state.payments = state.payments.map((payment: Payment) => {\n                if (payment.type === action.payload.type) return action.payload;\n                return payment;\n            });\n\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n            return;\n\n        case types.REMOVE_PAYMENT: {\n            state.payments = state.payments.filter(\n                (payment) => payment.type !== action.payload.type\n            );\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n            return;\n        }\n\n        case types.ADD_CUSTOMER_NOTE:\n            state.customerNote = action.payload;\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n            return;\n\n        case types.CHANGE_DELIVERED:\n            state.delivered = action.payload;\n            return;\n\n        case types.CHANGE_SALE:\n            state.sale = action.payload;\n            return;\n\n        case types.ADD_SHIPMENT:\n            state.shipment = action.payload;\n            if (!state.isEdit) {\n                state.isEdit = true;\n            }\n            return;\n\n        case types.CHANGE_IS_RESTRICT_ACTION: {\n            state.isRestrictAction = action.payload;\n            return;\n        }\n\n        case types.RESET:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}