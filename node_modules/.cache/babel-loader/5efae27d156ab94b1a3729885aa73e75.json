{"ast":null,"code":"import axios from './axios-client';\nexport default {\n  getProvinces: async () => {\n    const url = `/store/v1/locations`;\n    const response = await axios({\n      method: 'GET',\n      url\n    });\n    return response;\n  },\n  getDistricts: async provinceId => {\n    const url = `/store/v1/locations/provinces/${provinceId}/districts`;\n    const response = await axios({\n      method: 'GET',\n      url\n    });\n    return response;\n  },\n  getWards: async ({\n    provinceId,\n    districtId\n  }) => {\n    const url = `/store/v1/locations/provinces/${provinceId}/districts/${districtId}/wards`;\n    const response = await axios({\n      method: 'GET',\n      url\n    });\n    return response;\n  }\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/api/location-api.ts"],"names":["axios","getProvinces","url","response","method","getDistricts","provinceId","getWards","districtId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,eAAe;AACXC,EAAAA,YAAY,EAAE,YAA0B;AACpC,UAAMC,GAAG,GAAI,qBAAb;AACA,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,MAAAA,MAAM,EAAE,KADiB;AAEzBF,MAAAA;AAFyB,KAAD,CAA5B;AAKA,WAAOC,QAAP;AACH,GATU;AAWXE,EAAAA,YAAY,EAAE,MAAOC,UAAP,IAA4C;AACtD,UAAMJ,GAAG,GAAI,iCAAgCI,UAAW,YAAxD;AAEA,UAAMH,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,MAAAA,MAAM,EAAE,KADiB;AAEzBF,MAAAA;AAFyB,KAAD,CAA5B;AAKA,WAAOC,QAAP;AACH,GApBU;AAsBXI,EAAAA,QAAQ,EAAE,OAAO;AACbD,IAAAA,UADa;AAEbE,IAAAA;AAFa,GAAP,KAMU;AAChB,UAAMN,GAAG,GAAI,iCAAgCI,UAAW,cAAaE,UAAW,QAAhF;AAEA,UAAML,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,MAAAA,MAAM,EAAE,KADiB;AAEzBF,MAAAA;AAFyB,KAAD,CAA5B;AAKA,WAAOC,QAAP;AACH;AArCU,CAAf","sourcesContent":["import axios from './axios-client';\n\nexport default {\n    getProvinces: async (): Promise<any> => {\n        const url = `/store/v1/locations`;\n        const response = await axios({\n            method: 'GET',\n            url,\n        });\n\n        return response;\n    },\n\n    getDistricts: async (provinceId: string): Promise<any> => {\n        const url = `/store/v1/locations/provinces/${provinceId}/districts`;\n\n        const response = await axios({\n            method: 'GET',\n            url,\n        });\n\n        return response;\n    },\n\n    getWards: async ({\n        provinceId,\n        districtId,\n    }: {\n        provinceId?: string | null;\n        districtId?: string | null;\n    }): Promise<any> => {\n        const url = `/store/v1/locations/provinces/${provinceId}/districts/${districtId}/wards`;\n\n        const response = await axios({\n            method: 'GET',\n            url,\n        });\n\n        return response;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}