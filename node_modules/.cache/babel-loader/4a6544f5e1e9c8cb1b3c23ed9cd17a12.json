{"ast":null,"code":"import axiosClient from './axios-client';\n\nasync function getOrders({\n  storeId,\n  page = 1,\n  limit = 20,\n  search,\n  startTime,\n  endTime\n}) {\n  const url = `/store/v1/stores/${storeId}/orders`;\n  const response = await axiosClient({\n    url,\n    method: 'GET',\n    params: {\n      search,\n      limit,\n      page,\n      startTime,\n      endTime,\n      source: 'pos'\n    }\n  });\n  return response;\n}\n\nasync function createOrder({\n  storeId,\n  data\n}) {\n  const res = await axiosClient({\n    method: 'POST',\n    url: `/store/v1/stores/${storeId}/orders`,\n    data\n  });\n  return res;\n}\n\nasync function getOrder({\n  orderId,\n  storeId\n}) {\n  const res = await axiosClient({\n    method: 'GET',\n    url: `/store/v1/stores/${storeId}/orders/${orderId}`\n  });\n  return res;\n}\n\nasync function updateStatusOrder({\n  storeId,\n  orderId,\n  data\n}) {\n  const url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n  const res = await axiosClient({\n    method: 'PUT',\n    url: url,\n    data\n  });\n  return res.data;\n}\n\nasync function confirmPaymentOrder({\n  storeId,\n  orderId\n}) {\n  const url = `/store/v1/stores/${storeId}/orders/${orderId}/confirm-payment`;\n  const res = await axiosClient({\n    method: 'POST',\n    url: url\n  });\n  return res.data;\n}\n\nconst orderApi = {\n  getOrders,\n  createOrder,\n  updateStatusOrder,\n  confirmPaymentOrder,\n  getOrder\n};\nexport default orderApi;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/api/order-api.ts"],"names":["axiosClient","getOrders","storeId","page","limit","search","startTime","endTime","url","response","method","params","source","createOrder","data","res","getOrder","orderId","updateStatusOrder","confirmPaymentOrder","orderApi"],"mappings":"AACA,OAAOA,WAAP,MAAwB,gBAAxB;;AAcA,eAAeC,SAAf,CAAyB;AACrBC,EAAAA,OADqB;AAErBC,EAAAA,IAAI,GAAG,CAFc;AAGrBC,EAAAA,KAAK,GAAG,EAHa;AAIrBC,EAAAA,MAJqB;AAKrBC,EAAAA,SALqB;AAMrBC,EAAAA;AANqB,CAAzB,EAciB;AACb,QAAMC,GAAG,GAAI,oBAAmBN,OAAQ,SAAxC;AAEA,QAAMO,QAAQ,GAAG,MAAMT,WAAW,CAAC;AAC/BQ,IAAAA,GAD+B;AAE/BE,IAAAA,MAAM,EAAE,KAFuB;AAG/BC,IAAAA,MAAM,EAAE;AACJN,MAAAA,MADI;AAEJD,MAAAA,KAFI;AAGJD,MAAAA,IAHI;AAIJG,MAAAA,SAJI;AAKJC,MAAAA,OALI;AAMJK,MAAAA,MAAM,EAAE;AANJ;AAHuB,GAAD,CAAlC;AAaA,SAAOH,QAAP;AACH;;AAED,eAAeI,WAAf,CAA2B;AACvBX,EAAAA,OADuB;AAEvBY,EAAAA;AAFuB,CAA3B,EAYiB;AACb,QAAMC,GAAG,GAAG,MAAMf,WAAW,CAAC;AAC1BU,IAAAA,MAAM,EAAE,MADkB;AAE1BF,IAAAA,GAAG,EAAG,oBAAmBN,OAAQ,SAFP;AAG1BY,IAAAA;AAH0B,GAAD,CAA7B;AAMA,SAAOC,GAAP;AACH;;AAED,eAAeC,QAAf,CAAwB;AAAEC,EAAAA,OAAF;AAAWf,EAAAA;AAAX,CAAxB,EAAoF;AAChF,QAAMa,GAAG,GAAG,MAAMf,WAAW,CAAC;AAC1BU,IAAAA,MAAM,EAAE,KADkB;AAE1BF,IAAAA,GAAG,EAAG,oBAAmBN,OAAQ,WAAUe,OAAQ;AAFzB,GAAD,CAA7B;AAKA,SAAOF,GAAP;AACH;;AAED,eAAeG,iBAAf,CAAiC;AAC7BhB,EAAAA,OAD6B;AAE7Be,EAAAA,OAF6B;AAG7BH,EAAAA;AAH6B,CAAjC,EAQiB;AACb,QAAMN,GAAG,GAAI,oBAAmBN,OAAQ,WAAUe,OAAQ,EAA1D;AAEA,QAAMF,GAAG,GAAG,MAAMf,WAAW,CAAC;AAC1BU,IAAAA,MAAM,EAAE,KADkB;AAE1BF,IAAAA,GAAG,EAAEA,GAFqB;AAG1BM,IAAAA;AAH0B,GAAD,CAA7B;AAMA,SAAOC,GAAG,CAACD,IAAX;AACH;;AACD,eAAeK,mBAAf,CAAmC;AAC/BjB,EAAAA,OAD+B;AAE/Be,EAAAA;AAF+B,CAAnC,EAMiB;AACb,QAAMT,GAAG,GAAI,oBAAmBN,OAAQ,WAAUe,OAAQ,kBAA1D;AAEA,QAAMF,GAAG,GAAG,MAAMf,WAAW,CAAC;AAC1BU,IAAAA,MAAM,EAAE,MADkB;AAE1BF,IAAAA,GAAG,EAAEA;AAFqB,GAAD,CAA7B;AAKA,SAAOO,GAAG,CAACD,IAAX;AACH;;AAED,MAAMM,QAAQ,GAAG;AACbnB,EAAAA,SADa;AAEbY,EAAAA,WAFa;AAGbK,EAAAA,iBAHa;AAIbC,EAAAA,mBAJa;AAKbH,EAAAA;AALa,CAAjB;AAQA,eAAeI,QAAf","sourcesContent":["import { ORDER_STATUS } from '../collections/order';\nimport axiosClient from './axios-client';\n\nexport interface ProductData {\n    productId: string;\n    count: number;\n    price: number;\n}\n\nexport interface CustomerData {\n    _id: string;\n    name: string;\n    phoneNo: string;\n}\n\nasync function getOrders({\n    storeId,\n    page = 1,\n    limit = 20,\n    search,\n    startTime,\n    endTime,\n}: {\n    storeId: string;\n    page?: number;\n    limit?: number;\n    search?: string;\n    startTime?: number;\n    endTime?: number;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders`;\n\n    const response = await axiosClient({\n        url,\n        method: 'GET',\n        params: {\n            search,\n            limit,\n            page,\n            startTime,\n            endTime,\n            source: 'pos',\n        },\n    });\n\n    return response;\n}\n\nasync function createOrder({\n    storeId,\n    data,\n}: {\n    storeId: string;\n    data: {\n        products: ProductData[];\n        customer: CustomerData;\n        deliveryOptions: any;\n        warehouseId?: string;\n        source?: string;\n    };\n}): Promise<any> {\n    const res = await axiosClient({\n        method: 'POST',\n        url: `/store/v1/stores/${storeId}/orders`,\n        data,\n    });\n\n    return res;\n}\n\nasync function getOrder({ orderId, storeId }: { orderId: string; storeId: string }) {\n    const res = await axiosClient({\n        method: 'GET',\n        url: `/store/v1/stores/${storeId}/orders/${orderId}`,\n    });\n\n    return res;\n}\n\nasync function updateStatusOrder({\n    storeId,\n    orderId,\n    data,\n}: {\n    storeId: string;\n    orderId: string;\n    data: { status: ORDER_STATUS };\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n\n    const res = await axiosClient({\n        method: 'PUT',\n        url: url,\n        data,\n    });\n\n    return res.data;\n}\nasync function confirmPaymentOrder({\n    storeId,\n    orderId,\n}: {\n    storeId: string;\n    orderId: string;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders/${orderId}/confirm-payment`;\n\n    const res = await axiosClient({\n        method: 'POST',\n        url: url,\n    });\n\n    return res.data;\n}\n\nconst orderApi = {\n    getOrders,\n    createOrder,\n    updateStatusOrder,\n    confirmPaymentOrder,\n    getOrder,\n};\n\nexport default orderApi;\n"]},"metadata":{},"sourceType":"module"}