{"ast":null,"code":"import axios from './axios-client';\nimport axiosClient from './axios-client';\n\nasync function getOrders({\n  storeId,\n  page = 1,\n  limit = 20,\n  search,\n  startTime,\n  endTime\n}) {\n  const url = `/store/v1/stores/${storeId}/orders`;\n  const response = await axiosClient({\n    url,\n    method: 'GET',\n    params: {\n      search,\n      limit,\n      page,\n      startTime,\n      endTime,\n      source: 'pos'\n    }\n  });\n  return response;\n}\n\nasync function createOrder({\n  storeId,\n  data\n}) {\n  const res = await axios({\n    method: 'POST',\n    url: `/store/v1/stores/${storeId}/orders`,\n    data\n  });\n  return res;\n}\n\nasync function updateStatusOrder({\n  storeId,\n  orderId,\n  data\n}) {\n  const url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n  const res = await axios({\n    method: 'PUT',\n    url: url,\n    data\n  });\n  return res.data;\n}\n\nasync function confirmPaymentOrder({\n  storeId,\n  orderId\n}) {\n  const url = `/store/v1/stores/${storeId}/orders/${orderId}/confirm-payment`;\n  const res = await axios({\n    method: 'POST',\n    url: url\n  });\n  return res.data;\n}\n\nexport default {\n  getOrders,\n  createOrder,\n  updateStatusOrder,\n  confirmPaymentOrder\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/api/order-api.ts"],"names":["axios","axiosClient","getOrders","storeId","page","limit","search","startTime","endTime","url","response","method","params","source","createOrder","data","res","updateStatusOrder","orderId","confirmPaymentOrder"],"mappings":"AACA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAcA,eAAeC,SAAf,CAAyB;AACrBC,EAAAA,OADqB;AAErBC,EAAAA,IAAI,GAAG,CAFc;AAGrBC,EAAAA,KAAK,GAAG,EAHa;AAIrBC,EAAAA,MAJqB;AAKrBC,EAAAA,SALqB;AAMrBC,EAAAA;AANqB,CAAzB,EAciB;AACb,QAAMC,GAAG,GAAI,oBAAmBN,OAAQ,SAAxC;AAEA,QAAMO,QAAQ,GAAG,MAAMT,WAAW,CAAC;AAC/BQ,IAAAA,GAD+B;AAE/BE,IAAAA,MAAM,EAAE,KAFuB;AAG/BC,IAAAA,MAAM,EAAE;AACJN,MAAAA,MADI;AAEJD,MAAAA,KAFI;AAGJD,MAAAA,IAHI;AAIJG,MAAAA,SAJI;AAKJC,MAAAA,OALI;AAMJK,MAAAA,MAAM,EAAE;AANJ;AAHuB,GAAD,CAAlC;AAaA,SAAOH,QAAP;AACH;;AAED,eAAeI,WAAf,CAA2B;AACvBX,EAAAA,OADuB;AAEvBY,EAAAA;AAFuB,CAA3B,EAYiB;AACb,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAC;AACpBW,IAAAA,MAAM,EAAE,MADY;AAEpBF,IAAAA,GAAG,EAAG,oBAAmBN,OAAQ,SAFb;AAGpBY,IAAAA;AAHoB,GAAD,CAAvB;AAMA,SAAOC,GAAP;AACH;;AAED,eAAeC,iBAAf,CAAiC;AAC7Bd,EAAAA,OAD6B;AAE7Be,EAAAA,OAF6B;AAG7BH,EAAAA;AAH6B,CAAjC,EAQiB;AACb,QAAMN,GAAG,GAAI,oBAAmBN,OAAQ,WAAUe,OAAQ,EAA1D;AAEA,QAAMF,GAAG,GAAG,MAAMhB,KAAK,CAAC;AACpBW,IAAAA,MAAM,EAAE,KADY;AAEpBF,IAAAA,GAAG,EAAEA,GAFe;AAGpBM,IAAAA;AAHoB,GAAD,CAAvB;AAMA,SAAOC,GAAG,CAACD,IAAX;AACH;;AACD,eAAeI,mBAAf,CAAmC;AAC/BhB,EAAAA,OAD+B;AAE/Be,EAAAA;AAF+B,CAAnC,EAMiB;AACb,QAAMT,GAAG,GAAI,oBAAmBN,OAAQ,WAAUe,OAAQ,kBAA1D;AAEA,QAAMF,GAAG,GAAG,MAAMhB,KAAK,CAAC;AACpBW,IAAAA,MAAM,EAAE,MADY;AAEpBF,IAAAA,GAAG,EAAEA;AAFe,GAAD,CAAvB;AAKA,SAAOO,GAAG,CAACD,IAAX;AACH;;AAED,eAAe;AACXb,EAAAA,SADW;AAEXY,EAAAA,WAFW;AAGXG,EAAAA,iBAHW;AAIXE,EAAAA;AAJW,CAAf","sourcesContent":["import { ORDER_STATUS } from '../collections/order';\nimport axios from './axios-client';\nimport axiosClient from './axios-client';\n\nexport interface ProductData {\n    productId: string;\n    count: number;\n    price: number;\n}\n\nexport interface CustomerData {\n    _id: string;\n    name: string;\n    phoneNo: string;\n}\n\nasync function getOrders({\n    storeId,\n    page = 1,\n    limit = 20,\n    search,\n    startTime,\n    endTime,\n}: {\n    storeId: string;\n    page?: number;\n    limit?: number;\n    search?: string;\n    startTime?: number;\n    endTime?: number;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders`;\n\n    const response = await axiosClient({\n        url,\n        method: 'GET',\n        params: {\n            search,\n            limit,\n            page,\n            startTime,\n            endTime,\n            source: 'pos',\n        },\n    });\n\n    return response;\n}\n\nasync function createOrder({\n    storeId,\n    data,\n}: {\n    storeId: string;\n    data: {\n        products: ProductData[];\n        customer: CustomerData;\n        deliveryOptions: any;\n        warehouseId?: string;\n        source?: string;\n    };\n}): Promise<any> {\n    const res = await axios({\n        method: 'POST',\n        url: `/store/v1/stores/${storeId}/orders`,\n        data,\n    });\n\n    return res;\n}\n\nasync function updateStatusOrder({\n    storeId,\n    orderId,\n    data,\n}: {\n    storeId: string;\n    orderId: string;\n    data: { status: ORDER_STATUS };\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n\n    const res = await axios({\n        method: 'PUT',\n        url: url,\n        data,\n    });\n\n    return res.data;\n}\nasync function confirmPaymentOrder({\n    storeId,\n    orderId,\n}: {\n    storeId: string;\n    orderId: string;\n}): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders/${orderId}/confirm-payment`;\n\n    const res = await axios({\n        method: 'POST',\n        url: url,\n    });\n\n    return res.data;\n}\n\nexport default {\n    getOrders,\n    createOrder,\n    updateStatusOrder,\n    confirmPaymentOrder,\n};\n"]},"metadata":{},"sourceType":"module"}