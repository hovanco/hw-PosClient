{"ast":null,"code":"import Axios from 'axios';\nimport constants from '../constants';\nimport axios from './axios-client';\n\nasync function getUser() {\n  const url = '/authentication/v1/users/info';\n  const response = await axios({\n    url,\n    method: 'GET'\n  });\n  return response;\n}\n\nasync function loginWithEmail(data) {\n  const response = await axios({\n    method: 'POST',\n    url: '/authentication/v1/signin',\n    data\n  });\n  return response;\n}\n\nasync function updateUserInfo(data) {\n  const response = await axios({\n    method: 'PUT',\n    url: `/authentication/v1/users/info`,\n    data\n  });\n  return response;\n}\n\nasync function changePassword(data) {\n  const response = await axios({\n    method: 'PUT',\n    url: `/authentication/v1/users/changePassword`,\n    data\n  });\n  return response;\n}\n\nexport async function refreshAccessToken(refreshToken) {\n  const response = await Axios({\n    method: 'POST',\n    url: `${constants.URL_API}/authentication/v1/auth/refresh-token`,\n    data: {\n      refreshToken\n    }\n  });\n  return response.data;\n}\nexport async function existingRefreshToken(refreshToken) {\n  const response = await axios({\n    method: 'POST',\n    url: '/authentication/v1/auth/existing-refresh-token',\n    data: {\n      refreshToken\n    }\n  });\n  return response;\n}\nexport async function logout(refreshToken) {\n  const response = await axios({\n    method: 'POST',\n    url: '/authentication/v1/auth/logout',\n    data: {\n      refreshToken\n    }\n  });\n  return response.data;\n}\nconst authApi = {\n  getUser,\n  loginWithEmail,\n  updateUserInfo,\n  changePassword,\n  refreshAccessToken,\n  existingRefreshToken,\n  logout\n};\nexport default authApi;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/api/auth-api.ts"],"names":["Axios","constants","axios","getUser","url","response","method","loginWithEmail","data","updateUserInfo","changePassword","refreshAccessToken","refreshToken","URL_API","existingRefreshToken","logout","authApi"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,eAAeC,OAAf,GAAuC;AACnC,QAAMC,GAAG,GAAG,+BAAZ;AAEA,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBE,IAAAA,GADyB;AAEzBE,IAAAA,MAAM,EAAE;AAFiB,GAAD,CAA5B;AAKA,SAAOD,QAAP;AACH;;AAED,eAAeE,cAAf,CAA8BC,IAA9B,EAAuF;AACnF,QAAMH,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,IAAAA,MAAM,EAAE,MADiB;AAEzBF,IAAAA,GAAG,EAAE,2BAFoB;AAGzBI,IAAAA;AAHyB,GAAD,CAA5B;AAMA,SAAOH,QAAP;AACH;;AAED,eAAeI,cAAf,CAA8BD,IAA9B,EAAuF;AACnF,QAAMH,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,IAAAA,MAAM,EAAE,KADiB;AAEzBF,IAAAA,GAAG,EAAG,+BAFmB;AAGzBI,IAAAA;AAHyB,GAAD,CAA5B;AAMA,SAAOH,QAAP;AACH;;AAED,eAAeK,cAAf,CAA8BF,IAA9B,EAGiB;AACb,QAAMH,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,IAAAA,MAAM,EAAE,KADiB;AAEzBF,IAAAA,GAAG,EAAG,yCAFmB;AAGzBI,IAAAA;AAHyB,GAAD,CAA5B;AAMA,SAAOH,QAAP;AACH;;AAED,OAAO,eAAeM,kBAAf,CAAkCC,YAAlC,EAAsE;AACzE,QAAMP,QAAQ,GAAG,MAAML,KAAK,CAAC;AACzBM,IAAAA,MAAM,EAAE,MADiB;AAEzBF,IAAAA,GAAG,EAAG,GAAEH,SAAS,CAACY,OAAQ,uCAFD;AAGzBL,IAAAA,IAAI,EAAE;AACFI,MAAAA;AADE;AAHmB,GAAD,CAA5B;AAQA,SAAOP,QAAQ,CAACG,IAAhB;AACH;AAED,OAAO,eAAeM,oBAAf,CAAoCF,YAApC,EAAwE;AAC3E,QAAMP,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,IAAAA,MAAM,EAAE,MADiB;AAEzBF,IAAAA,GAAG,EAAE,gDAFoB;AAGzBI,IAAAA,IAAI,EAAE;AACFI,MAAAA;AADE;AAHmB,GAAD,CAA5B;AAQA,SAAOP,QAAP;AACH;AAED,OAAO,eAAeU,MAAf,CAAsBH,YAAtB,EAA0D;AAC7D,QAAMP,QAAQ,GAAG,MAAMH,KAAK,CAAC;AACzBI,IAAAA,MAAM,EAAE,MADiB;AAEzBF,IAAAA,GAAG,EAAE,gCAFoB;AAGzBI,IAAAA,IAAI,EAAE;AACFI,MAAAA;AADE;AAHmB,GAAD,CAA5B;AAQA,SAAOP,QAAQ,CAACG,IAAhB;AACH;AAED,MAAMQ,OAAO,GAAG;AACZb,EAAAA,OADY;AAEZI,EAAAA,cAFY;AAGZE,EAAAA,cAHY;AAIZC,EAAAA,cAJY;AAKZC,EAAAA,kBALY;AAMZG,EAAAA,oBANY;AAOZC,EAAAA;AAPY,CAAhB;AAUA,eAAeC,OAAf","sourcesContent":["import Axios from 'axios';\nimport constants from '../constants';\nimport axios from './axios-client';\n\nasync function getUser(): Promise<any> {\n    const url = '/authentication/v1/users/info';\n\n    const response = await axios({\n        url,\n        method: 'GET',\n    });\n\n    return response;\n}\n\nasync function loginWithEmail(data: { email: string; password: string }): Promise<any> {\n    const response = await axios({\n        method: 'POST',\n        url: '/authentication/v1/signin',\n        data,\n    });\n\n    return response;\n}\n\nasync function updateUserInfo(data: { name?: string; picture?: string }): Promise<any> {\n    const response = await axios({\n        method: 'PUT',\n        url: `/authentication/v1/users/info`,\n        data,\n    });\n\n    return response;\n}\n\nasync function changePassword(data: {\n    currentPassword: string;\n    newPassword: string;\n}): Promise<any> {\n    const response = await axios({\n        method: 'PUT',\n        url: `/authentication/v1/users/changePassword`,\n        data,\n    });\n\n    return response;\n}\n\nexport async function refreshAccessToken(refreshToken: string): Promise<any> {\n    const response = await Axios({\n        method: 'POST',\n        url: `${constants.URL_API}/authentication/v1/auth/refresh-token`,\n        data: {\n            refreshToken,\n        },\n    });\n\n    return response.data;\n}\n\nexport async function existingRefreshToken(refreshToken: string): Promise<any> {\n    const response = await axios({\n        method: 'POST',\n        url: '/authentication/v1/auth/existing-refresh-token',\n        data: {\n            refreshToken,\n        },\n    });\n\n    return response;\n}\n\nexport async function logout(refreshToken: string): Promise<any> {\n    const response = await axios({\n        method: 'POST',\n        url: '/authentication/v1/auth/logout',\n        data: {\n            refreshToken,\n        },\n    });\n\n    return response.data;\n}\n\nconst authApi = {\n    getUser,\n    loginWithEmail,\n    updateUserInfo,\n    changePassword,\n    refreshAccessToken,\n    existingRefreshToken,\n    logout,\n};\n\nexport default authApi;\n"]},"metadata":{},"sourceType":"module"}