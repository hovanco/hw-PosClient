{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/PosClient/src/routes/hoc-route.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GuestRouter = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const isAuth = useSelector(state => state.auth.isAuth);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => !isAuth ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/dashboard',\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GuestRouter, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n\n_c = GuestRouter;\n\nconst HomeRouter = ({\n  children,\n  ...rest\n}) => {\n  _s2();\n\n  const isAuth = useSelector(state => state.auth.isAuth);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => !isAuth ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HomeRouter, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = HomeRouter;\n\nconst UserRouter = ({\n  children,\n  ...rest\n}) => {\n  _s3();\n\n  const isAuth = useSelector(state => state.auth.isAuth);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => isAuth ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/auth/login',\n        state: {\n          from: location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(UserRouter, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = UserRouter;\nexport { GuestRouter, UserRouter, HomeRouter };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GuestRouter\");\n$RefreshReg$(_c2, \"HomeRouter\");\n$RefreshReg$(_c3, \"UserRouter\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/routes/hoc-route.tsx"],"names":["React","Route","Redirect","useSelector","GuestRouter","children","rest","isAuth","state","auth","location","pathname","from","HomeRouter","UserRouter"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAAqBC,KAArB,EAA4BC,QAA5B,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAMA,MAAMC,WAAmC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAAwC;AAAA;;AAChF,QAAMC,MAAM,GAAGJ,WAAW,CAAEK,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWF,MAA5B,CAA1B;AAEA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEI,MAAAA;AAAF,KAAD,KACJ,CAACH,MAAD,GACIF,QADJ,gBAGI,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAM,QAAAA,QAAQ,EAAE,YADV;AAEAH,QAAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAEF;AAAR;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApBD;;GAAMN,W;UACaD,W;;;KADbC,W;;AAuBN,MAAMS,UAAkC,GAAG,CAAC;AAAER,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAAwC;AAAA;;AAC/E,QAAMC,MAAM,GAAGJ,WAAW,CAAEK,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWF,MAA5B,CAA1B;AAEA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEI,MAAAA;AAAF,KAAD,KACJ,CAACH,MAAD,GACIF,QADJ,gBAGI,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAM,QAAAA,QAAQ,EAAE,GADV;AAEAH,QAAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAEF;AAAR;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApBD;;IAAMG,U;UACaV,W;;;MADbU,U;;AA0BN,MAAMC,UAAkC,GAAG,CAAC;AAAET,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAAwC;AAAA;;AAC/E,QAAMC,MAAM,GAAGJ,WAAW,CAAEK,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWF,MAA5B,CAA1B;AAEA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEI,MAAAA;AAAF,KAAD,KACJH,MAAM,GACFF,QADE,gBAGF,QAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAM,QAAAA,QAAQ,EAAE,aADV;AAEAH,QAAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAEF;AAAR;AAFP;AADR;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApBD;;IAAMI,U;UACaX,W;;;MADbW,U;AAsBN,SAASV,WAAT,EAAsBU,UAAtB,EAAkCD,UAAlC","sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { RouteProps, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\ninterface Props {\n    children: ReactNode;\n}\n\nconst GuestRouter: FC<Props & RouteProps> = ({ children, ...rest }): JSX.Element => {\n    const isAuth = useSelector((state: any) => state.auth.isAuth);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !isAuth ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/dashboard',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\n\nconst HomeRouter: FC<Props & RouteProps> = ({ children, ...rest }): JSX.Element => {\n    const isAuth = useSelector((state: any) => state.auth.isAuth);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                !isAuth ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\n\n\n\n\nconst UserRouter: FC<Props & RouteProps> = ({ children, ...rest }): JSX.Element => {\n    const isAuth = useSelector((state: any) => state.auth.isAuth);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isAuth ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/auth/login',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport { GuestRouter, UserRouter, HomeRouter };\n"]},"metadata":{},"sourceType":"module"}