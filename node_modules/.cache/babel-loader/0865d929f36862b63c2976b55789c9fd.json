{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/card-bill/btn-pay.tsx\",\n    _s = $RefreshSig$();\n\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, message, Modal, Typography } from 'antd';\nimport { get, pick } from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../api/order-api';\nimport { ORDER_STATUS } from '../../../../collections/order';\nimport { INVALID_PRODUCTS_QUANTITY } from '../../../../constants/error';\nimport useKey from '../../../../hook/useKey';\nimport useLoading from '../../../../hook/useLoading';\nimport useVisble from '../../../../hook/useVisible';\nimport formatMoney from '../../../../utils/formatMoney';\nimport { useSalesCounter } from '../../pages/sales-counters/state/context';\nimport { totalPriceProduct } from '../../ultils/order';\nimport ProductQuantityInvalid from './products-quantity-invalid';\nimport SuccessOrder from './success-order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BtnPay = ({\n  disabled\n}) => {\n  _s();\n\n  const {\n    visible,\n    toggle\n  } = useVisble();\n  const [showError, setShowError] = useState(false);\n  const {\n    createdBy,\n    products,\n    shipment,\n    customer,\n    customerNote,\n    changeSale,\n    changeDelivered,\n    delivered,\n    payments\n  } = useSalesCounter();\n  const store = useSelector(state => state.store.store);\n  const warehouseId = useSelector(state => state.store.warehouseId);\n  const {\n    loading,\n    handleLoading\n  } = useLoading();\n  const [order, setOrder] = useState();\n  const paymentValue = payments.map(payment => {\n    return Number(payment.value);\n  });\n  const moneyCustomer = paymentValue.reduce((value, item) => item + value, 0);\n\n  const payOrder = async () => {\n    if (!customer || products.length === 0) {\n      return;\n    }\n\n    const productsData = products.map(product => ({ ...pick(product, ['count', 'price']),\n      productId: product._id\n    }));\n    const customerData = pick(customer, ['_id', 'name', 'phoneNo']);\n\n    try {\n      handleLoading(true);\n      const data = {\n        storeId: store._id,\n        data: {\n          customer: customerData,\n          products: productsData,\n          warehouseId,\n          deliveryOptions: {\n            shipmentFee: shipment,\n            shipmentFeeForCustomer: shipment,\n            serviceId: 0,\n            transportType: 0,\n            customerNote,\n            feeForReceiver: 0,\n            shipmentFeeByTotal: true\n          },\n          source: 'pos',\n          createdBy\n        }\n      };\n      const order = await orderApi.createOrder(data);\n      await orderApi.updateStatusOrder({\n        storeId: store._id,\n        orderId: order._id,\n        data: {\n          status: delivered ? ORDER_STATUS.DELIVERED : ORDER_STATUS.DELIVERING\n        }\n      });\n      await orderApi.confirmPaymentOrder({\n        storeId: store._id,\n        orderId: order._id\n      });\n      toggle();\n      setOrder({ ...order,\n        moneyCustomer\n      });\n    } catch (error) {\n      const errorMessage = get(error.response, 'data.message');\n\n      if (errorMessage === INVALID_PRODUCTS_QUANTITY) {\n        setShowError(true);\n      } else {\n        message.error('Lỗi tạo đơn hàng');\n      }\n    } finally {\n      handleLoading(false);\n    }\n  };\n\n  const handlePay = () => {\n    if (!loading) {\n      payOrder();\n    }\n  };\n\n  useKey({\n    key: 'F1',\n    callback: handlePay\n  });\n  const price = totalPriceProduct(products) + shipment;\n  const isDisable = useMemo(() => !customer || products.length === 0, [customer, products]) || disabled;\n  useEffect(() => {\n    changeSale(!isDisable);\n\n    if (!isDisable) {\n      changeDelivered(true);\n    }\n  }, [isDisable]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      size: \"large\",\n      block: true,\n      onClick: payOrder,\n      loading: loading,\n      disabled: isDisable,\n      children: [\"THANH TO\\xC1N \", price > 0 && `${formatMoney(price)} đ`, \" (F1)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: showError,\n      title: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n          style: {\n            color: 'red',\n            fontSize: 30\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            marginTop: 10\n          },\n          children: \"S\\u1EA3n ph\\u1EA9m h\\u1EBFt h\\xE0ng ho\\u1EB7c kh\\xF4ng \\u0111\\u1EE7 s\\u1ED1 l\\u01B0\\u1EE3ng h\\xE0ng b\\xE1n, vui l\\xF2ng \\u0111i\\u1EC1u ch\\u1EC9nh \\u0111\\u01A1n h\\xE0ng.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this),\n      maskClosable: false,\n      keyboard: false,\n      cancelText: \"\\u0110\\xF3ng\",\n      onCancel: () => setShowError(false),\n      destroyOnClose: true,\n      footer: null,\n      closable: false,\n      children: /*#__PURE__*/_jsxDEV(ProductQuantityInvalid, {\n        onCancel: () => setShowError(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      onCancel: toggle,\n      closable: false,\n      maskClosable: false,\n      keyboard: false,\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(SuccessOrder, {\n        toggle: toggle,\n        order: order\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BtnPay, \"11Z01RTAQ/MQpLyhJ/eLm3fKUnA=\", false, function () {\n  return [useVisble, useSalesCounter, useSelector, useSelector, useLoading, useKey];\n});\n\n_c = BtnPay;\nexport default BtnPay;\n\nvar _c;\n\n$RefreshReg$(_c, \"BtnPay\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/card-bill/btn-pay.tsx"],"names":["CloseCircleOutlined","Button","message","Modal","Typography","get","pick","React","useEffect","useMemo","useState","useSelector","orderApi","ORDER_STATUS","INVALID_PRODUCTS_QUANTITY","useKey","useLoading","useVisble","formatMoney","useSalesCounter","totalPriceProduct","ProductQuantityInvalid","SuccessOrder","BtnPay","disabled","visible","toggle","showError","setShowError","createdBy","products","shipment","customer","customerNote","changeSale","changeDelivered","delivered","payments","store","state","warehouseId","loading","handleLoading","order","setOrder","paymentValue","map","payment","Number","value","moneyCustomer","reduce","item","payOrder","length","productsData","product","productId","_id","customerData","data","storeId","deliveryOptions","shipmentFee","shipmentFeeForCustomer","serviceId","transportType","feeForReceiver","shipmentFeeByTotal","source","createOrder","updateStatusOrder","orderId","status","DELIVERED","DELIVERING","confirmPaymentOrder","error","errorMessage","response","handlePay","key","callback","price","isDisable","textAlign","color","fontSize","marginTop"],"mappings":"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","sourcesContent":["import { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, message, Modal, Typography } from 'antd';\nimport { get, pick } from 'lodash';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport orderApi from '../../../../api/order-api';\nimport { IOrder, ORDER_STATUS } from '../../../../collections/order';\nimport { INVALID_PRODUCTS_QUANTITY } from '../../../../constants/error';\nimport useKey from '../../../../hook/useKey';\nimport useLoading from '../../../../hook/useLoading';\nimport useVisble from '../../../../hook/useVisible';\nimport formatMoney from '../../../../utils/formatMoney';\nimport { useSalesCounter } from '../../pages/sales-counters/state/context';\nimport { Payment, ProductState } from '../../pages/sales-counters/state/interface';\nimport { totalPriceProduct } from '../../ultils/order';\nimport ProductQuantityInvalid from './products-quantity-invalid';\nimport SuccessOrder from './success-order';\n\ninterface Props {\n    disabled: boolean;\n}\n\nconst BtnPay: FC<Props> = ({ disabled }) => {\n    const { visible, toggle } = useVisble();\n    const [showError, setShowError] = useState<boolean>(false);\n    const {\n        createdBy,\n        products,\n        shipment,\n        customer,\n        customerNote,\n        changeSale,\n        changeDelivered,\n        delivered,\n        payments,\n    } = useSalesCounter();\n    const store = useSelector((state: any) => state.store.store);\n    const warehouseId = useSelector((state: any) => state.store.warehouseId);\n    const { loading, handleLoading } = useLoading();\n\n    const [order, setOrder] = useState<IOrder>();\n\n    const paymentValue: number[] = payments.map((payment: Payment) => {\n        return Number(payment.value);\n    });\n\n    const moneyCustomer = paymentValue.reduce((value: number, item: number) => item + value, 0);\n\n    const payOrder = async () => {\n        if (!customer || products.length === 0) {\n            return;\n        }\n\n        const productsData = products.map((product: ProductState) => ({\n            ...pick(product, ['count', 'price']),\n            productId: product._id,\n        }));\n\n        const customerData = pick(customer, ['_id', 'name', 'phoneNo']);\n\n        try {\n            handleLoading(true);\n\n            const data = {\n                storeId: store._id,\n                data: {\n                    customer: customerData,\n                    products: productsData,\n                    warehouseId,\n                    deliveryOptions: {\n                        shipmentFee: shipment,\n                        shipmentFeeForCustomer: shipment,\n                        serviceId: 0,\n                        transportType: 0,\n                        customerNote,\n                        feeForReceiver: 0,\n                        shipmentFeeByTotal: true,\n                    },\n                    source: 'pos',\n                    createdBy,\n                },\n            };\n\n            const order = await orderApi.createOrder(data);\n\n            await orderApi.updateStatusOrder({\n                storeId: store._id,\n                orderId: order._id,\n                data: {\n                    status: delivered ? ORDER_STATUS.DELIVERED : ORDER_STATUS.DELIVERING,\n                },\n            });\n\n            await orderApi.confirmPaymentOrder({\n                storeId: store._id,\n                orderId: order._id,\n            });\n\n            toggle();\n            setOrder({ ...order, moneyCustomer });\n        } catch (error) {\n            const errorMessage = get(error.response, 'data.message');\n\n            if (errorMessage === INVALID_PRODUCTS_QUANTITY) {\n                setShowError(true);\n            } else {\n                message.error('Lỗi tạo đơn hàng');\n            }\n        } finally {\n            handleLoading(false);\n        }\n    };\n\n    const handlePay = () => {\n        if (!loading) {\n            payOrder();\n        }\n    };\n\n    useKey({ key: 'F1', callback: handlePay });\n\n    const price = totalPriceProduct(products) + shipment;\n\n    const isDisable =\n        useMemo(() => !customer || products.length === 0, [customer, products]) || disabled;\n\n    useEffect(() => {\n        changeSale(!isDisable);\n        if (!isDisable) {\n            changeDelivered(true);\n        }\n    }, [isDisable]);\n\n    return (\n        <>\n            <Button\n                type='primary'\n                size='large'\n                block\n                onClick={payOrder}\n                loading={loading}\n                disabled={isDisable}\n            >\n                THANH TOÁN {price > 0 && `${formatMoney(price)} đ`} (F1)\n            </Button>\n\n            <Modal\n                visible={showError}\n                title={\n                    <div style={{ textAlign: 'center' }}>\n                        <CloseCircleOutlined style={{ color: 'red', fontSize: 30 }} />\n\n                        <Typography style={{ marginTop: 10 }}>\n                            Sản phẩm hết hàng hoặc không đủ số lượng hàng bán, vui lòng điều chỉnh\n                            đơn hàng.\n                        </Typography>\n                    </div>\n                }\n                maskClosable={false}\n                keyboard={false}\n                cancelText='Đóng'\n                onCancel={() => setShowError(false)}\n                destroyOnClose\n                footer={null}\n                closable={false}\n            >\n                <ProductQuantityInvalid onCancel={() => setShowError(false)} />\n            </Modal>\n\n            <Modal\n                visible={visible}\n                onCancel={toggle}\n                closable={false}\n                maskClosable={false}\n                keyboard={false}\n                footer={null}\n            >\n                <SuccessOrder toggle={toggle} order={order} />\n            </Modal>\n        </>\n    );\n};\n\nexport default BtnPay;\n"]},"metadata":{},"sourceType":"module"}