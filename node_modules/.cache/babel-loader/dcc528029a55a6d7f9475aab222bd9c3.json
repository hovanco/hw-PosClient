{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/card-bill/products-quantity-invalid.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Button, Col, Row, Table, Tag } from 'antd';\nimport { concat, pick } from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getStock } from '../../../../api/stock-api';\nimport { useSalesCounter } from '../../pages/sales-counters/state/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useProductQuantity = productIds => {\n  _s();\n\n  const store = useSelector(state => state.store.store);\n  const [loading, setLoading] = useState(true);\n  const [productsInvalid, setProductInvalid] = useState([]);\n  useEffect(() => {\n    async function getProducstStock(storeId) {\n      setLoading(true);\n      const data = await Promise.all(productIds.map(async item => {\n        const response = await getStock({\n          storeId,\n          productId: item._id,\n          parentId: item.parentId\n        });\n        return response.data;\n      }));\n      let productsInvalidArray = [];\n      concat([], ...data).forEach(item => {\n        if (item.quantity === 0) {\n          productsInvalidArray.push(item);\n        } else {\n          const productOrder = productIds.find(i => i._id === item._id);\n\n          if (productOrder && productOrder.count > item.quantity) {\n            productsInvalidArray.push(item);\n          }\n        }\n      });\n      setProductInvalid(productsInvalidArray);\n      setLoading(false);\n    }\n\n    if (store._id) {\n      getProducstStock(store._id);\n    }\n  }, [store._id]);\n  const value = useMemo(() => ({\n    loading,\n    productsInvalid\n  }), [loading, productsInvalid]);\n  return value;\n};\n\n_s(useProductQuantity, \"Fl9feoZoXo8Jx1eHvH/eo4xEGCk=\", false, function () {\n  return [useSelector];\n});\n\nconst columns = [{\n  title: 'Tên sản phẩm',\n  key: 'name',\n  dataIndex: 'productId',\n  align: 'center',\n  render: product => {\n    var _product$attributes, _product$attributes$m;\n\n    const variant = (_product$attributes = product.attributes) === null || _product$attributes === void 0 ? void 0 : (_product$attributes$m = _product$attributes.map(attr => attr.tags)) === null || _product$attributes$m === void 0 ? void 0 : _product$attributes$m.join(' - ');\n    return /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: variant.trim().length > 0 && /*#__PURE__*/_jsxDEV(Tag, {\n          children: \"variant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this);\n  }\n}, {\n  title: 'Trạng thái',\n  dataIndex: 'quantity',\n  align: 'center',\n  key: 'quantity',\n  render: quantity => {\n    if (quantity === 0) return 'đã hết hàng';\n    return `chỉ còn ${quantity} sản phẩm`;\n  }\n}];\n\nconst ProductQuantityInvalid = ({\n  onCancel\n}) => {\n  _s2();\n\n  const {\n    products\n  } = useSalesCounter();\n  const {\n    loading,\n    productsInvalid\n  } = useProductQuantity(products.map(i => pick(i, ['_id', 'parentId', 'count'])));\n  useEffect(() => {}, [productsInvalid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '-25px -24px 0 -24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        columns: columns,\n        loading: loading,\n        dataSource: productsInvalid,\n        rowKey: \"_id\",\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"end\",\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          danger: true,\n          onClick: onCancel,\n          children: \"\\u0110\\xF3ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ProductQuantityInvalid, \"YnUNM3q+fm5Z1qledf4t1BtkOGk=\", false, function () {\n  return [useSalesCounter, useProductQuantity];\n});\n\n_c = ProductQuantityInvalid;\nexport default ProductQuantityInvalid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductQuantityInvalid\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/card-bill/products-quantity-invalid.tsx"],"names":["Button","Col","Row","Table","Tag","concat","pick","React","useEffect","useMemo","useState","useSelector","getStock","useSalesCounter","useProductQuantity","productIds","store","state","loading","setLoading","productsInvalid","setProductInvalid","getProducstStock","storeId","data","Promise","all","map","item","response","productId","_id","parentId","productsInvalidArray","forEach","quantity","push","productOrder","find","i","count","value","columns","title","key","dataIndex","align","render","product","variant","attributes","attr","tags","join","textAlign","name","trim","length","ProductQuantityInvalid","onCancel","products","margin","marginTop"],"mappings":"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","sourcesContent":["import { Button, Col, Row, Table, Tag } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { concat, pick } from 'lodash';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getStock } from '../../../../api/stock-api';\nimport { ProductAttribute } from '../../../../collections/product';\nimport { useSalesCounter } from '../../pages/sales-counters/state/context';\n\ninterface Props {\n    onCancel: () => void;\n}\n\nconst useProductQuantity = (productIds: any[]) => {\n    const store = useSelector((state: any) => state.store.store);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [productsInvalid, setProductInvalid] = useState<any[]>([]);\n\n    useEffect(() => {\n        async function getProducstStock(storeId: string) {\n            setLoading(true);\n\n            const data = await Promise.all(\n                productIds.map(async (item: any) => {\n                    const response = await getStock({\n                        storeId,\n                        productId: item._id,\n                        parentId: item.parentId,\n                    });\n\n                    return response.data;\n                })\n            );\n\n            let productsInvalidArray: any[] = [];\n\n            concat([], ...data).forEach((item) => {\n                if (item.quantity === 0) {\n                    productsInvalidArray.push(item);\n                } else {\n                    const productOrder = productIds.find((i) => i._id === item._id);\n                    if (productOrder && productOrder.count > item.quantity) {\n                        productsInvalidArray.push(item);\n                    }\n                }\n            });\n\n            setProductInvalid(productsInvalidArray);\n            setLoading(false);\n        }\n\n        if (store._id) {\n            getProducstStock(store._id);\n        }\n    }, [store._id]);\n\n    const value = useMemo(() => ({ loading, productsInvalid }), [loading, productsInvalid]);\n\n    return value;\n};\n\nconst columns: ColumnsType<any> = [\n    {\n        title: 'Tên sản phẩm',\n        key: 'name',\n        dataIndex: 'productId',\n        align: 'center',\n        render: (product) => {\n            const variant: string = product.attributes\n                ?.map((attr: ProductAttribute) => attr.tags)\n                ?.join(' - ');\n\n            return (\n                <Row style={{ textAlign: 'center' }}>\n                    <Col span={24}>{product.name}</Col>\n                    <Col span={24}>{variant.trim().length > 0 && <Tag>variant</Tag>}</Col>\n                </Row>\n            );\n        },\n    },\n    {\n        title: 'Trạng thái',\n        dataIndex: 'quantity',\n        align: 'center',\n        key: 'quantity',\n        render: (quantity) => {\n            if (quantity === 0) return 'đã hết hàng';\n            return `chỉ còn ${quantity} sản phẩm`;\n        },\n    },\n];\n\nconst ProductQuantityInvalid: FC<Props> = ({ onCancel }) => {\n    const { products } = useSalesCounter();\n    const { loading, productsInvalid } = useProductQuantity(\n        products.map((i: any) => pick(i, ['_id', 'parentId', 'count']))\n    );\n\n    useEffect(() => {}, [productsInvalid]);\n\n    return (\n        <>\n            <div style={{ margin: '-25px -24px 0 -24px' }}>\n                <Table\n                    bordered\n                    columns={columns}\n                    loading={loading}\n                    dataSource={productsInvalid}\n                    rowKey='_id'\n                    pagination={false}\n                />\n            </div>\n\n            <Row justify='end' style={{ marginTop: 20 }}>\n                <Col>\n                    <Button type='primary' danger onClick={onCancel}>\n                        Đóng\n                    </Button>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default ProductQuantityInvalid;\n"]},"metadata":{},"sourceType":"module"}