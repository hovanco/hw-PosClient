{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/pages/products/table-stock.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport formatMoney from '../../../../utils/formatMoney';\nimport { useProduct } from './use-product';\nimport { Card, Typography, Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableStock = () => {\n  _s();\n\n  const {\n    getStocksByVariantId,\n    product,\n    loadingStocks\n  } = useProduct();\n  const columns = [{\n    title: 'Kho hàng',\n    dataIndex: ['warehouseId', 'name'],\n    key: 'warehouseId'\n  }, {\n    title: 'Địa chỉ kho',\n    dataIndex: '',\n    key: 'address',\n    render: stock => getWarehouseAddress(stock.warehouseId)\n  }, {\n    title: 'Tồn kho',\n    dataIndex: 'quantity',\n    key: 'quantity',\n    align: 'center',\n    render: quantity => `${formatMoney(quantity)}`,\n    width: 120\n  }];\n\n  const getWarehouseAddress = warehouse => {\n    if (typeof warehouse === 'string') return '';\n    const {\n      address,\n      wardName,\n      districtName,\n      provinceName\n    } = warehouse;\n    return [address, wardName, districtName, provinceName].join(', ');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-table-stock\",\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 3,\n      children: \"T\\xECnh tr\\u1EA1ng t\\u1ED3n kho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      sticky: true,\n      dataSource: getStocksByVariantId(product === null || product === void 0 ? void 0 : product._id),\n      columns: columns,\n      rowKey: \"_id\",\n      pagination: false,\n      className: \"table-dark-odd table-stock\",\n      loading: loadingStocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableStock, \"KE7BzkITCcwIRYNiPEDsuPYbfSo=\", false, function () {\n  return [useProduct];\n});\n\n_c = TableStock;\nexport default TableStock;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableStock\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/pages/products/table-stock.tsx"],"names":["React","formatMoney","useProduct","Card","Typography","Table","TableStock","getStocksByVariantId","product","loadingStocks","columns","title","dataIndex","key","render","stock","getWarehouseAddress","warehouseId","align","quantity","width","warehouse","address","wardName","districtName","provinceName","join","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAGA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;AAIA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,QAAwC,MAAxC;;;AAMA,MAAMC,UAAc,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAAmDP,UAAU,EAAnE;AAEA,QAAMQ,OAAmC,GAAG,CACxC;AACIC,IAAAA,KAAK,EAAE,UADX;AAEIC,IAAAA,SAAS,EAAE,CAAC,aAAD,EAAgB,MAAhB,CAFf;AAGIC,IAAAA,GAAG,EAAE;AAHT,GADwC,EAOxC;AACIF,IAAAA,KAAK,EAAE,aADX;AAEIC,IAAAA,SAAS,EAAE,EAFf;AAGIC,IAAAA,GAAG,EAAE,SAHT;AAIIC,IAAAA,MAAM,EAAGC,KAAD,IAA0BC,mBAAmB,CAACD,KAAK,CAACE,WAAP;AAJzD,GAPwC,EAcxC;AACIN,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE,UAFf;AAGIC,IAAAA,GAAG,EAAE,UAHT;AAIIK,IAAAA,KAAK,EAAE,QAJX;AAKIJ,IAAAA,MAAM,EAAGK,QAAD,IAAuB,GAAElB,WAAW,CAACkB,QAAD,CAAW,EAL3D;AAMIC,IAAAA,KAAK,EAAE;AANX,GAdwC,CAA5C;;AAwBA,QAAMJ,mBAAmB,GAAIK,SAAD,IAAoC;AAC5D,QAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC,OAAO,EAAP;AAEnC,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA;AAAnC,QAAoDJ,SAA1D;AACA,WAAO,CAACC,OAAD,EAAUC,QAAV,EAAoBC,YAApB,EAAkCC,YAAlC,EAAgDC,IAAhD,CAAqD,IAArD,CAAP;AACH,GALD;;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA,4BACI,QAAC,UAAD,CAAY,KAAZ;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,UAAU,EAAEnB,oBAAoB,CAACC,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEmB,GAAV,CAFpC;AAGI,MAAA,OAAO,EAAEjB,OAHb;AAII,MAAA,MAAM,EAAC,KAJX;AAKI,MAAA,UAAU,EAAE,KALhB;AAMI,MAAA,SAAS,EAAC,4BANd;AAOI,MAAA,OAAO,EAAED;AAPb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhDD;;GAAMH,U;UACuDJ,U;;;KADvDI,U;AAkDN,eAAeA,UAAf","sourcesContent":["import React, { FC } from 'react';\n\nimport { ColumnsType } from 'antd/lib/table';\nimport formatMoney from '../../../../utils/formatMoney';\nimport { useProduct } from './use-product';\nimport { IWarehouse } from '../../../../collections/warehouse';\nimport { IStock } from '../../../../collections/product';\n\nimport { Card, Typography, Table } from 'antd';\n\ninterface IStockInTable extends Omit<IStock, 'warehouseId'> {\n    warehouseId: IWarehouse | string;\n}\n\nconst TableStock: FC = () => {\n    const { getStocksByVariantId, product, loadingStocks } = useProduct();\n\n    const columns: ColumnsType<IStockInTable> = [\n        {\n            title: 'Kho hàng',\n            dataIndex: ['warehouseId', 'name'],\n            key: 'warehouseId',\n        },\n\n        {\n            title: 'Địa chỉ kho',\n            dataIndex: '',\n            key: 'address',\n            render: (stock: IStockInTable) => getWarehouseAddress(stock.warehouseId),\n        },\n\n        {\n            title: 'Tồn kho',\n            dataIndex: 'quantity',\n            key: 'quantity',\n            align: 'center',\n            render: (quantity: number) => `${formatMoney(quantity)}`,\n            width: 120,\n        },\n    ];\n\n    const getWarehouseAddress = (warehouse: IWarehouse | string) => {\n        if (typeof warehouse === 'string') return '';\n\n        const { address, wardName, districtName, provinceName } = warehouse;\n        return [address, wardName, districtName, provinceName].join(', ');\n    };\n\n    return (\n        <Card className='card-table-stock'>\n            <Typography.Title level={3}>Tình trạng tồn kho</Typography.Title>\n            <Table\n                sticky\n                dataSource={getStocksByVariantId(product?._id)}\n                columns={columns}\n                rowKey='_id'\n                pagination={false}\n                className='table-dark-odd table-stock'\n                loading={loadingStocks}\n            />\n        </Card>\n    );\n};\n\nexport default TableStock;\n"]},"metadata":{},"sourceType":"module"}