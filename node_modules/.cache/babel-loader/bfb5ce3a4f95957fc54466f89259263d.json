{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/toggle-product-list/category-select.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dropdown, Menu } from 'antd';\nimport React, { memo, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { DownIcon } from '../../assets/icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategorySelect = /*#__PURE__*/memo(_c = _s(({\n  onSelect,\n  categoryId\n}) => {\n  _s();\n\n  const categories = useSelector(state => state.store.categories);\n\n  const handleClick = e => {\n    onSelect(e.key);\n  };\n\n  const selectKeys = categoryId ? [categoryId] : [];\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: handleClick,\n    selectedKeys: selectKeys,\n    style: {\n      height: 200,\n      overflowY: 'auto'\n    },\n    children: categories.map(category => {\n      return /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: category.name\n      }, category._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n\n  const category = useMemo(() => categories.find(category => category._id === categoryId), [categories, categoryId]);\n  const label = category ? category.name : `Loại sản phẩm`;\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    overlay: menu,\n    trigger: ['click'],\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"text\",\n      children: [label, \" \", /*#__PURE__*/_jsxDEV(DownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}, \"swSy/0Duemg+ZAq+SBVdjCPKFdU=\", false, function () {\n  return [useSelector];\n}));\n_c2 = CategorySelect;\nexport { CategorySelect };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CategorySelect$memo\");\n$RefreshReg$(_c2, \"CategorySelect\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/toggle-product-list/category-select.tsx"],"names":["Button","Dropdown","Menu","React","memo","useMemo","useSelector","DownIcon","CategorySelect","onSelect","categoryId","categories","state","store","handleClick","e","key","selectKeys","menu","height","overflowY","map","category","name","_id","find","label"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,MAAvC;AACA,OAAOC,KAAP,IAAoBC,IAApB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,mBAAzB;;AAOA,MAAMC,cAAyB,gBAAGJ,IAAI,SAAC,CAAC;AAAEK,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA8B;AAAA;;AACjE,QAAMC,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAgBA,KAAK,CAACC,KAAN,CAAYF,UAA7B,CAA9B;;AAEA,QAAMG,WAAW,GAAIC,CAAD,IAAY;AAC5BN,IAAAA,QAAQ,CAACM,CAAC,CAACC,GAAH,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAGP,UAAU,GAAG,CAACA,UAAD,CAAH,GAAkB,EAA/C;;AAEA,QAAMQ,IAAI,gBACN,QAAC,IAAD;AACI,IAAA,OAAO,EAAEJ,WADb;AAEI,IAAA,YAAY,EAAEG,UAFlB;AAGI,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAHX;AAAA,cAKKT,UAAU,CAACU,GAAX,CAAgBC,QAAD,IAAyB;AACrC,0BAAO,QAAC,IAAD,CAAM,IAAN;AAAA,kBAA+BA,QAAQ,CAACC;AAAxC,SAAgBD,QAAQ,CAACE,GAAzB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;;AAYA,QAAMF,QAAQ,GAAGjB,OAAO,CACpB,MAAMM,UAAU,CAACc,IAAX,CAAiBH,QAAD,IAAyBA,QAAQ,CAACE,GAAT,KAAiBd,UAA1D,CADc,EAEpB,CAACC,UAAD,EAAaD,UAAb,CAFoB,CAAxB;AAKA,QAAMgB,KAAK,GAAGJ,QAAQ,GAAGA,QAAQ,CAACC,IAAZ,GAAoB,eAA1C;AAEA,sBACI,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEL,IAAnB;AAAyB,IAAA,OAAO,EAAE,CAAC,OAAD,CAAlC;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA,iBACKQ,KADL,oBACY,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnCqC;AAAA,UACfpB,WADe;AAAA,GAAtC;MAAME,c;AAqCN,SAASA,cAAT","sourcesContent":["import { Button, Dropdown, Menu } from 'antd';\nimport React, { FC, memo, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ICategory } from '../../../../collections/category';\nimport { DownIcon } from '../../assets/icon';\n\ninterface Props {\n    onSelect: (categoryId: string) => void;\n    categoryId?: string;\n}\n\nconst CategorySelect: FC<Props> = memo(({ onSelect, categoryId }) => {\n    const categories = useSelector((state: any) => state.store.categories);\n\n    const handleClick = (e: any) => {\n        onSelect(e.key);\n    };\n\n    const selectKeys = categoryId ? [categoryId] : [];\n\n    const menu = (\n        <Menu\n            onClick={handleClick}\n            selectedKeys={selectKeys}\n            style={{ height: 200, overflowY: 'auto' }}\n        >\n            {categories.map((category: ICategory) => {\n                return <Menu.Item key={category._id}>{category.name}</Menu.Item>;\n            })}\n        </Menu>\n    );\n\n    const category = useMemo(\n        () => categories.find((category: ICategory) => category._id === categoryId),\n        [categories, categoryId]\n    );\n\n    const label = category ? category.name : `Loại sản phẩm`;\n\n    return (\n        <Dropdown overlay={menu} trigger={['click']}>\n            <Button type='text'>\n                {label} <DownIcon />\n            </Button>\n        </Dropdown>\n    );\n});\n\nexport { CategorySelect };\n"]},"metadata":{},"sourceType":"module"}