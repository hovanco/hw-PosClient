{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport staffApi from '../api/staff-api';\n\nconst useStaffs = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [staffs, setStaffs] = useState([]);\n  const store = useSelector(state => state.store.store);\n  useEffect(() => {\n    async function loadStaffs(storeId) {\n      try {\n        setLoading(true);\n        const response = await staffApi.getStaffs(storeId);\n        setStaffs(response);\n      } catch (error) {} finally {\n        setLoading(false);\n      }\n    }\n\n    if (store._id) {\n      loadStaffs(store._id);\n    }\n  }, [store._id]);\n  const value = useMemo(() => ({\n    loading,\n    staffs\n  }), [loading, staffs]);\n  return value;\n};\n\n_s(useStaffs, \"c1ewHIrQiSeMZOWO9GlJf+uL3HE=\", false, function () {\n  return [useSelector];\n});\n\nexport default useStaffs;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/hook/useStaffs.tsx"],"names":["useEffect","useMemo","useState","useSelector","staffApi","useStaffs","loading","setLoading","staffs","setStaffs","store","state","loadStaffs","storeId","response","getStaffs","error","_id","value"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAW,EAAX,CAApC;AACA,QAAMQ,KAAK,GAAGP,WAAW,CAAEQ,KAAD,IAAgBA,KAAK,CAACD,KAAN,CAAYA,KAA7B,CAAzB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,UAAf,CAA0BC,OAA1B,EAA2C;AACvC,UAAI;AACAN,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMO,QAAQ,GAAG,MAAMV,QAAQ,CAACW,SAAT,CAAmBF,OAAnB,CAAvB;AAEAJ,QAAAA,SAAS,CAACK,QAAD,CAAT;AACH,OALD,CAKE,OAAOE,KAAP,EAAc,CACf,CAND,SAMU;AACNT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;;AAED,QAAIG,KAAK,CAACO,GAAV,EAAe;AACXL,MAAAA,UAAU,CAACF,KAAK,CAACO,GAAP,CAAV;AACH;AACJ,GAhBQ,EAgBN,CAACP,KAAK,CAACO,GAAP,CAhBM,CAAT;AAkBA,QAAMC,KAAK,GAAGjB,OAAO,CAAC,OAAO;AAAEK,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAP,CAAD,EAA8B,CAACF,OAAD,EAAUE,MAAV,CAA9B,CAArB;AAEA,SAAOU,KAAP;AACH,CA1BD;;GAAMb,S;UAGYF,W;;;AAyBlB,eAAeE,SAAf","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport staffApi from '../api/staff-api';\nimport { IStaff } from '../collections/staff';\n\nconst useStaffs = () => {\n    const [loading, setLoading] = useState<boolean>(true);\n    const [staffs, setStaffs] = useState<IStaff[]>([]);\n    const store = useSelector((state: any) => state.store.store);\n\n    useEffect(() => {\n        async function loadStaffs(storeId: string) {\n            try {\n                setLoading(true);\n                const response = await staffApi.getStaffs(storeId);\n\n                setStaffs(response);\n            } catch (error) {\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        if (store._id) {\n            loadStaffs(store._id);\n        }\n    }, [store._id]);\n\n    const value = useMemo(() => ({ loading, staffs }), [loading, staffs]);\n\n    return value;\n};\n\nexport default useStaffs;\n"]},"metadata":{},"sourceType":"module"}