{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/PosClient/src/features/settings/account/change-password.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Typography, Form, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = ({\n  form\n}) => {\n  _s();\n\n  const [showForm, setShowForm] = useState(false);\n\n  const toggle = () => setShowForm(!showForm);\n\n  const validateConfirmPassword = (rule, value, callback) => {\n    if (value !== form.getFieldValue('newPassword')) {\n      callback('Xác nhận mật khẩu không trùng khớp!');\n    } else {\n      callback();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography.Link, {\n      onClick: toggle,\n      className: \"change-password-trigger\",\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), \" Thay \\u0111\\u1ED5i m\\u1EADt kh\\u1EA9u\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"M\\u1EADt kh\\u1EA9u c\\u0169\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Trường này không được để trống'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"**********\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n        name: \"newPassword\",\n        rules: [{\n          required: true,\n          message: 'Trường này không được để trống'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"**********\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n        name: \"confirmNewPassword\",\n        rules: [{\n          validator: validateConfirmPassword\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"**********\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ChangePassword, \"kaMG6XwWu8g4QBLwMinxod9pp4Q=\");\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/settings/account/change-password.tsx"],"names":["React","useState","Typography","Form","Input","PlusOutlined","ChangePassword","form","showForm","setShowForm","toggle","validateConfirmPassword","rule","value","callback","getFieldValue","required","message","validator"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,MAAxC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;;AAOA,MAAMC,cAAyB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAU,KAAV,CAAxC;;AAEA,QAAMS,MAAM,GAAG,MAAMD,WAAW,CAAC,CAACD,QAAF,CAAhC;;AAEA,QAAMG,uBAAuB,GAAG,CAACC,IAAD,EAAYC,KAAZ,EAAwBC,QAAxB,KAA0C;AACtE,QAAID,KAAK,KAAKN,IAAI,CAACQ,aAAL,CAAmB,aAAnB,CAAd,EAAiD;AAC7CD,MAAAA,QAAQ,CAAC,qCAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ;AACX;AACJ,GAND;;AAQA,sBACI;AAAA,4BACI,QAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,OAAO,EAAEJ,MAA1B;AAAkC,MAAA,SAAS,EAAC,yBAA5C;AAAA,8BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKF,QAAQ,iBACL;AAAA,8BACI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,KAAK,EAAC,4BADV;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAE,CAAC;AAAEQ,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAD,CAHX;AAAA,+BAKI,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,KAAK,EAAC,6BADV;AAEI,QAAA,IAAI,EAAC,aAFT;AAGI,QAAA,KAAK,EAAE,CAAC;AAAED,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAD,CAHX;AAAA,+BAKI,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,KAAK,EAAC,8CADV;AAEI,QAAA,IAAI,EAAC,oBAFT;AAGI,QAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,SAAS,EAAEP;AAAb,SAAD,CAHX;AAAA,+BAKI,QAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,WAAW,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA,oBANR;AAAA,kBADJ;AAmCH,CAhDD;;GAAML,c;;KAAAA,c;AAkDN,eAAeA,cAAf","sourcesContent":["import React, { FC, useState } from 'react';\n\nimport { Typography, Form, Input } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { FormInstance } from 'antd/lib/form/Form';\n\ninterface Props {\n    form: FormInstance;\n}\n\nconst ChangePassword: FC<Props> = ({ form }) => {\n    const [showForm, setShowForm] = useState<boolean>(false);\n\n    const toggle = () => setShowForm(!showForm);\n\n    const validateConfirmPassword = (rule: any, value: any, callback: any) => {\n        if (value !== form.getFieldValue('newPassword')) {\n            callback('Xác nhận mật khẩu không trùng khớp!');\n        } else {\n            callback();\n        }\n    };\n\n    return (\n        <>\n            <Typography.Link onClick={toggle} className='change-password-trigger'>\n                <PlusOutlined /> Thay đổi mật khẩu\n            </Typography.Link>\n\n            {showForm && (\n                <>\n                    <Form.Item\n                        label='Mật khẩu cũ'\n                        name='password'\n                        rules={[{ required: true, message: 'Trường này không được để trống' }]}\n                    >\n                        <Input.Password placeholder='**********' />\n                    </Form.Item>\n\n                    <Form.Item\n                        label='Mật khẩu mới'\n                        name='newPassword'\n                        rules={[{ required: true, message: 'Trường này không được để trống' }]}\n                    >\n                        <Input.Password placeholder='**********' />\n                    </Form.Item>\n\n                    <Form.Item\n                        label='Xác nhận mật khẩu mới'\n                        name='confirmNewPassword'\n                        rules={[{ validator: validateConfirmPassword }]}\n                    >\n                        <Input.Password placeholder='**********' />\n                    </Form.Item>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}