{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/card-bill/payment-with-money.tsx\",\n    _s = $RefreshSig$();\n\nimport { InputNumber } from 'antd';\nimport React, { useEffect, useRef } from 'react';\nimport { formatterInput, parserInput } from '../../../../utils/formatMoney';\nimport { useSalesCounter } from '../../pages/sales-counters/state/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentWithMoney = ({\n  payment\n}) => {\n  _s();\n\n  const {\n    updatePayment\n  } = useSalesCounter();\n  const inputRef = useRef(null);\n\n  const focusInput = e => {\n    if (e.code === 'F4' && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const onChange = value => {\n    if (value) {\n      const new_payment = { ...payment,\n        value: Number(value)\n      };\n      updatePayment(new_payment);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', focusInput);\n    return () => {\n      document.removeEventListener('keydown', focusInput);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InputNumber, {\n    ref: inputRef,\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Nh\\u1EADp ti\\u1EC1n kh\\xE1ch \\u0111\\u01B0a (F4)\",\n    min: 0,\n    parser: parserInput,\n    formatter: formatterInput,\n    onChange: onChange,\n    value: Number(payment.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentWithMoney, \"poghkcq9T4xkxZXP2omODSLoHOA=\", false, function () {\n  return [useSalesCounter];\n});\n\n_c = PaymentWithMoney;\nexport default PaymentWithMoney;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentWithMoney\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/components/card-bill/payment-with-money.tsx"],"names":["InputNumber","React","useEffect","useRef","formatterInput","parserInput","useSalesCounter","PaymentWithMoney","payment","updatePayment","inputRef","focusInput","e","code","current","focus","onChange","value","new_payment","Number","document","addEventListener","removeEventListener","width"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,KAAP,IAAoBC,SAApB,EAA+BC,MAA/B,QAA6C,OAA7C;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,+BAA5C;AACA,SAASC,eAAT,QAAgC,0CAAhC;;;AAOA,MAAMC,gBAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,eAAe,EAAzC;AACA,QAAMI,QAAQ,GAAGP,MAAM,CAAM,IAAN,CAAvB;;AAEA,QAAMQ,UAAU,GAAIC,CAAD,IAAsB;AACrC,QAAIA,CAAC,CAACC,IAAF,KAAW,IAAX,IAAmBH,QAAQ,CAACI,OAAhC,EAAyC;AACrCJ,MAAAA,QAAQ,CAACI,OAAT,CAAiBC,KAAjB;AACH;AACJ,GAJD;;AAMA,QAAMC,QAAQ,GAAIC,KAAD,IAA6B;AAC1C,QAAIA,KAAJ,EAAW;AACP,YAAMC,WAAW,GAAG,EAChB,GAAGV,OADa;AAEhBS,QAAAA,KAAK,EAAEE,MAAM,CAACF,KAAD;AAFG,OAApB;AAKAR,MAAAA,aAAa,CAACS,WAAD,CAAb;AACH;AACJ,GATD;;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCV,UAArC;AAEA,WAAO,MAAM;AACTS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCX,UAAxC;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,WAAD;AACI,IAAA,GAAG,EAAED,QADT;AAEI,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAFX;AAGI,IAAA,WAAW,EAAC,iDAHhB;AAII,IAAA,GAAG,EAAE,CAJT;AAKI,IAAA,MAAM,EAAElB,WALZ;AAMI,IAAA,SAAS,EAAED,cANf;AAOI,IAAA,QAAQ,EAAEY,QAPd;AAQI,IAAA,KAAK,EAAEG,MAAM,CAACX,OAAO,CAACS,KAAT;AARjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAzCD;;GAAMV,gB;UACwBD,e;;;KADxBC,gB;AA2CN,eAAeA,gBAAf","sourcesContent":["import { InputNumber } from 'antd';\nimport React, { FC, useEffect, useRef } from 'react';\nimport { formatterInput, parserInput } from '../../../../utils/formatMoney';\nimport { useSalesCounter } from '../../pages/sales-counters/state/context';\nimport { Payment } from '../../pages/sales-counters/state/interface';\n\ninterface Props {\n    payment: Payment;\n}\n\nconst PaymentWithMoney: FC<Props> = ({ payment }) => {\n    const { updatePayment } = useSalesCounter();\n    const inputRef = useRef<any>(null);\n\n    const focusInput = (e: KeyboardEvent) => {\n        if (e.code === 'F4' && inputRef.current) {\n            inputRef.current.focus();\n        }\n    };\n\n    const onChange = (value?: string | number) => {\n        if (value) {\n            const new_payment = {\n                ...payment,\n                value: Number(value),\n            };\n\n            updatePayment(new_payment);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', focusInput);\n\n        return () => {\n            document.removeEventListener('keydown', focusInput);\n        };\n    }, []);\n\n    return (\n        <InputNumber\n            ref={inputRef}\n            style={{ width: '100%' }}\n            placeholder='Nhập tiền khách đưa (F4)'\n            min={0}\n            parser={parserInput}\n            formatter={formatterInput}\n            onChange={onChange}\n            value={Number(payment.value)}\n        />\n    );\n};\n\nexport default PaymentWithMoney;\n"]},"metadata":{},"sourceType":"module"}