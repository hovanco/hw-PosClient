{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport types from './reducer/type';\nimport productApi from '../../../../api/product-api';\nimport * as stockApi from '../../../../api/stock-api';\nimport { ProductContext } from './context';\n\nconst findWarehouseById = (warehouseId, warehouses) => {\n  return warehouses.find(warehouse => warehouse._id === warehouseId) || warehouseId;\n};\n\nconst mapStockWithWarehouse = (stocks, warehouses) => {\n  return stocks.map(stock => ({ ...stock,\n    warehouseId: findWarehouseById(stock.warehouseId, warehouses)\n  }));\n};\n\nexport const useProduct = () => {\n  _s();\n\n  const value = useContext(ProductContext);\n  const store = useSelector(state => state.store.store);\n  const warehouseId = useSelector(state => state.store.warehouseId);\n  const warehouses = useSelector(state => state.store.warehouses);\n  const {\n    state,\n    dispatch\n  } = value;\n\n  const setLoading = () => {\n    dispatch({\n      type: types.LOADING\n    });\n  };\n\n  const setLoadingStocks = () => {\n    dispatch({\n      type: types.LOADING_STOCKS\n    });\n  };\n\n  const searchProducts = async text => {\n    await dispatch({\n      type: types.CHANGE_SEARCH,\n      payload: text\n    });\n    await getProducts({\n      search: text,\n      type: 'search',\n      page: 1\n    });\n  };\n\n  const getDetailProduct = productId => {\n    return productApi.getProduct({\n      storeId: store._id,\n      productId\n    });\n  };\n\n  const getProducts = async ({\n    search,\n    page,\n    type\n  }) => {\n    try {\n      const response = await productApi.getProducts({\n        storeId: store._id,\n        page,\n        limit: 20,\n        search,\n        warehouseId,\n        withQuantity: true,\n        variant: true\n      });\n      const typeAction = type === 'search' ? types.SEARCH_PRODUCTS : types.LOAD_PRODUCTS;\n      dispatch({\n        type: typeAction,\n        payload: {\n          products: response.data,\n          total: response.total\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: types.LOAD_PRODUCTS,\n        payload: []\n      });\n    }\n  };\n\n  const selectProduct = productSelected => {\n    setLoadingStocks();\n    stockApi.getStocks({\n      storeId: store._id,\n      productId: productSelected._id\n    }).then(response => {\n      const {\n        data\n      } = response;\n      const stocks = mapStockWithWarehouse(data, warehouses);\n      dispatch({\n        type: types.SET_STOCK,\n        payload: stocks\n      });\n    }).catch(() => {\n      dispatch({\n        type: types.SET_STOCK,\n        payload: []\n      });\n    });\n    dispatch({\n      type: types.SELECT_PRODUCT,\n      payload: productSelected\n    });\n  };\n\n  const setPage = async page => {\n    await dispatch({\n      type: types.SET_PAGE,\n      payload: page\n    });\n    await getProducts({\n      search: state.search,\n      page: page\n    });\n  };\n\n  const setProduct = useCallback(product => {\n    productApi.getProduct({\n      storeId: store._id,\n      productId: product._id\n    }).then(product => {\n      dispatch({\n        type: types.SET_PRODUCT,\n        payload: product\n      });\n\n      if (product.variants && product.variants.length) {\n        setVariant(product.variants[0]);\n      }\n    }).catch(() => {\n      dispatch({\n        type: types.SET_PRODUCT,\n        payload: undefined\n      });\n    });\n    setLoadingStocks();\n    stockApi.getStocks({\n      storeId: store._id,\n      parentId: product._id\n    }).then(response => {\n      const {\n        data\n      } = response;\n      const stocks = mapStockWithWarehouse(data, warehouses);\n      dispatch({\n        type: types.SET_STOCK,\n        payload: stocks\n      });\n    }).catch(() => {\n      dispatch({\n        type: types.SET_STOCK,\n        payload: []\n      });\n    }); // eslint-disable-next-line\n  }, [warehouses, store._id]);\n  const getVariantQuantity = useCallback(variantId => {\n    if (state.stocks.length === 0) return 0;\n    let targetStocks = state.stocks.filter(item => item.productId._id === variantId);\n    return targetStocks.reduce((prevValue, currValue) => prevValue + currValue.quantity, 0);\n  }, // eslint-disable-next-line\n  [state.stocks]);\n  const setVariant = useCallback(variant => {\n    dispatch({\n      type: types.SET_VARIANT,\n      payload: variant\n    }); // eslint-disable-next-line\n  }, [warehouses]);\n  const getStocksByVariantId = useCallback(variantId => {\n    if (state.stocks.length === 0 || !variantId) return [];\n    let targetStocks = state.stocks.filter(item => item.productId._id === variantId);\n    return targetStocks;\n  }, [state.stocks]);\n  return { ...state,\n    setProduct,\n    getVariantQuantity,\n    setVariant,\n    getStocksByVariantId,\n    setLoading,\n    searchProducts,\n    selectProduct,\n    setPage,\n    getProducts,\n    getDetailProduct\n  };\n};\n\n_s(useProduct, \"h//mutVKY32D8X+3Ro1SZSJWmZo=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/PosClient/src/features/dashboard/pages/products/use-product.ts"],"names":["useContext","useCallback","useSelector","types","productApi","stockApi","ProductContext","findWarehouseById","warehouseId","warehouses","find","warehouse","_id","mapStockWithWarehouse","stocks","map","stock","useProduct","value","store","state","dispatch","setLoading","type","LOADING","setLoadingStocks","LOADING_STOCKS","searchProducts","text","CHANGE_SEARCH","payload","getProducts","search","page","getDetailProduct","productId","getProduct","storeId","response","limit","withQuantity","variant","typeAction","SEARCH_PRODUCTS","LOAD_PRODUCTS","products","data","total","error","selectProduct","productSelected","getStocks","then","SET_STOCK","catch","SELECT_PRODUCT","setPage","SET_PAGE","setProduct","product","SET_PRODUCT","variants","length","setVariant","undefined","parentId","getVariantQuantity","variantId","targetStocks","filter","item","reduce","prevValue","currValue","quantity","SET_VARIANT","getStocksByVariantId"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAIA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,2BAA1B;AAEA,SAASC,cAAT,QAA+B,WAA/B;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,WAAD,EAAsBC,UAAtB,KAAmD;AACzE,SAAOA,UAAU,CAACC,IAAX,CAAiBC,SAAD,IAA2BA,SAAS,CAACC,GAAV,KAAkBJ,WAA7D,KAA6EA,WAApF;AACH,CAFD;;AAIA,MAAMK,qBAAqB,GAAG,CAACC,MAAD,EAAmBL,UAAnB,KAAgD;AAC1E,SAAOK,MAAM,CAACC,GAAP,CAAYC,KAAD,KAAoB,EAClC,GAAGA,KAD+B;AAElCR,IAAAA,WAAW,EAAED,iBAAiB,CAACS,KAAK,CAACR,WAAP,EAAoBC,UAApB;AAFI,GAApB,CAAX,CAAP;AAIH,CALD;;AAOA,OAAO,MAAMQ,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAMC,KAAK,GAAGlB,UAAU,CAACM,cAAD,CAAxB;AACA,QAAMa,KAAK,GAAGjB,WAAW,CAAEkB,KAAD,IAAgBA,KAAK,CAACD,KAAN,CAAYA,KAA7B,CAAzB;AACA,QAAMX,WAAW,GAAGN,WAAW,CAAEkB,KAAD,IAAgBA,KAAK,CAACD,KAAN,CAAYX,WAA7B,CAA/B;AACA,QAAMC,UAAU,GAAGP,WAAW,CAAEkB,KAAD,IAAgBA,KAAK,CAACD,KAAN,CAAYV,UAA7B,CAA9B;AAEA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,KAA5B;;AAEA,QAAMI,UAAU,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEpB,KAAK,CAACqB;AADP,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEpB,KAAK,CAACuB;AADP,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMC,cAAc,GAAG,MAAOC,IAAP,IAAwB;AAC3C,UAAMP,QAAQ,CAAC;AACXE,MAAAA,IAAI,EAAEpB,KAAK,CAAC0B,aADD;AAEXC,MAAAA,OAAO,EAAEF;AAFE,KAAD,CAAd;AAKA,UAAMG,WAAW,CAAC;AACdC,MAAAA,MAAM,EAAEJ,IADM;AAEdL,MAAAA,IAAI,EAAE,QAFQ;AAGdU,MAAAA,IAAI,EAAE;AAHQ,KAAD,CAAjB;AAKH,GAXD;;AAaA,QAAMC,gBAAgB,GAAIC,SAAD,IAAuB;AAC5C,WAAO/B,UAAU,CAACgC,UAAX,CAAsB;AACzBC,MAAAA,OAAO,EAAElB,KAAK,CAACP,GADU;AAEzBuB,MAAAA;AAFyB,KAAtB,CAAP;AAIH,GALD;;AAOA,QAAMJ,WAAW,GAAG,OAAO;AACvBC,IAAAA,MADuB;AAEvBC,IAAAA,IAFuB;AAGvBV,IAAAA;AAHuB,GAAP,KAQd;AACF,QAAI;AACA,YAAMe,QAAQ,GAAG,MAAMlC,UAAU,CAAC2B,WAAX,CAAuB;AAC1CM,QAAAA,OAAO,EAAElB,KAAK,CAACP,GAD2B;AAE1CqB,QAAAA,IAF0C;AAG1CM,QAAAA,KAAK,EAAE,EAHmC;AAI1CP,QAAAA,MAJ0C;AAK1CxB,QAAAA,WAL0C;AAM1CgC,QAAAA,YAAY,EAAE,IAN4B;AAO1CC,QAAAA,OAAO,EAAE;AAPiC,OAAvB,CAAvB;AAUA,YAAMC,UAAU,GAAGnB,IAAI,KAAK,QAAT,GAAoBpB,KAAK,CAACwC,eAA1B,GAA4CxC,KAAK,CAACyC,aAArE;AAEAvB,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEmB,UADD;AAELZ,QAAAA,OAAO,EAAE;AACLe,UAAAA,QAAQ,EAAEP,QAAQ,CAACQ,IADd;AAELC,UAAAA,KAAK,EAAET,QAAQ,CAACS;AAFX;AAFJ,OAAD,CAAR;AAOH,KApBD,CAoBE,OAAOC,KAAP,EAAc;AACZ3B,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,KAAK,CAACyC,aADP;AAELd,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH;AACJ,GAnCD;;AAqCA,QAAMmB,aAAa,GAAIC,eAAD,IAA0B;AAC5CzB,IAAAA,gBAAgB;AAChBpB,IAAAA,QAAQ,CACH8C,SADL,CACe;AAAEd,MAAAA,OAAO,EAAElB,KAAK,CAACP,GAAjB;AAAsBuB,MAAAA,SAAS,EAAEe,eAAe,CAACtC;AAAjD,KADf,EAEKwC,IAFL,CAEWd,QAAD,IAAmB;AACrB,YAAM;AAAEQ,QAAAA;AAAF,UAAWR,QAAjB;AAEA,YAAMxB,MAAM,GAAGD,qBAAqB,CAACiC,IAAD,EAAOrC,UAAP,CAApC;AACAY,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,KAAK,CAACkD,SADP;AAELvB,QAAAA,OAAO,EAAEhB;AAFJ,OAAD,CAAR;AAIH,KAVL,EAWKwC,KAXL,CAWW,MAAM;AACTjC,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,KAAK,CAACkD,SADP;AAELvB,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KAhBL;AAiBAT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEpB,KAAK,CAACoD,cADP;AAELzB,MAAAA,OAAO,EAAEoB;AAFJ,KAAD,CAAR;AAIH,GAvBD;;AAyBA,QAAMM,OAAO,GAAG,MAAOvB,IAAP,IAAwB;AACpC,UAAMZ,QAAQ,CAAC;AACXE,MAAAA,IAAI,EAAEpB,KAAK,CAACsD,QADD;AAEX3B,MAAAA,OAAO,EAAEG;AAFE,KAAD,CAAd;AAKA,UAAMF,WAAW,CAAC;AACdC,MAAAA,MAAM,EAAEZ,KAAK,CAACY,MADA;AAEdC,MAAAA,IAAI,EAAEA;AAFQ,KAAD,CAAjB;AAIH,GAVD;;AAYA,QAAMyB,UAAU,GAAGzD,WAAW,CACzB0D,OAAD,IAA2B;AACvBvD,IAAAA,UAAU,CACLgC,UADL,CACgB;AAAEC,MAAAA,OAAO,EAAElB,KAAK,CAACP,GAAjB;AAAsBuB,MAAAA,SAAS,EAAEwB,OAAO,CAAC/C;AAAzC,KADhB,EAEKwC,IAFL,CAEWO,OAAD,IAAuB;AACzBtC,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,KAAK,CAACyD,WADP;AAEL9B,QAAAA,OAAO,EAAE6B;AAFJ,OAAD,CAAR;;AAKA,UAAIA,OAAO,CAACE,QAAR,IAAoBF,OAAO,CAACE,QAAR,CAAiBC,MAAzC,EAAiD;AAC7CC,QAAAA,UAAU,CAACJ,OAAO,CAACE,QAAR,CAAiB,CAAjB,CAAD,CAAV;AACH;AACJ,KAXL,EAYKP,KAZL,CAYW,MAAM;AACTjC,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,KAAK,CAACyD,WADP;AAEL9B,QAAAA,OAAO,EAAEkC;AAFJ,OAAD,CAAR;AAIH,KAjBL;AAmBAvC,IAAAA,gBAAgB;AAChBpB,IAAAA,QAAQ,CACH8C,SADL,CACe;AAAEd,MAAAA,OAAO,EAAElB,KAAK,CAACP,GAAjB;AAAsBqD,MAAAA,QAAQ,EAAEN,OAAO,CAAC/C;AAAxC,KADf,EAEKwC,IAFL,CAEWd,QAAD,IAAmB;AACrB,YAAM;AAAEQ,QAAAA;AAAF,UAAWR,QAAjB;AAEA,YAAMxB,MAAM,GAAGD,qBAAqB,CAACiC,IAAD,EAAOrC,UAAP,CAApC;AAEAY,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,KAAK,CAACkD,SADP;AAELvB,QAAAA,OAAO,EAAEhB;AAFJ,OAAD,CAAR;AAIH,KAXL,EAYKwC,KAZL,CAYW,MAAM;AACTjC,MAAAA,QAAQ,CAAC;AACLE,QAAAA,IAAI,EAAEpB,KAAK,CAACkD,SADP;AAELvB,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KAjBL,EArBuB,CAwCvB;AACH,GA1CyB,EA2C1B,CAACrB,UAAD,EAAaU,KAAK,CAACP,GAAnB,CA3C0B,CAA9B;AA8CA,QAAMsD,kBAAkB,GAAGjE,WAAW,CACjCkE,SAAD,IAAuB;AACnB,QAAI/C,KAAK,CAACN,MAAN,CAAagD,MAAb,KAAwB,CAA5B,EAA+B,OAAO,CAAP;AAE/B,QAAIM,YAAY,GAAGhD,KAAK,CAACN,MAAN,CAAauD,MAAb,CACdC,IAAD,IAAkBA,IAAI,CAACnC,SAAL,CAAevB,GAAf,KAAuBuD,SAD1B,CAAnB;AAIA,WAAOC,YAAY,CAACG,MAAb,CACH,CAACC,SAAD,EAAoBC,SAApB,KAA0CD,SAAS,GAAGC,SAAS,CAACC,QAD7D,EAEH,CAFG,CAAP;AAIH,GAZiC,EAclC;AACA,GAACtD,KAAK,CAACN,MAAP,CAfkC,CAAtC;AAkBA,QAAMiD,UAAU,GAAG9D,WAAW,CACzBwC,OAAD,IAAsB;AAClBpB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEpB,KAAK,CAACwE,WADP;AAEL7C,MAAAA,OAAO,EAAEW;AAFJ,KAAD,CAAR,CADkB,CAMlB;AACH,GARyB,EAS1B,CAAChC,UAAD,CAT0B,CAA9B;AAYA,QAAMmE,oBAAoB,GAAG3E,WAAW,CACnCkE,SAAD,IAAwB;AACpB,QAAI/C,KAAK,CAACN,MAAN,CAAagD,MAAb,KAAwB,CAAxB,IAA6B,CAACK,SAAlC,EAA6C,OAAO,EAAP;AAE7C,QAAIC,YAAY,GAAGhD,KAAK,CAACN,MAAN,CAAauD,MAAb,CACdC,IAAD,IAAkBA,IAAI,CAACnC,SAAL,CAAevB,GAAf,KAAuBuD,SAD1B,CAAnB;AAIA,WAAOC,YAAP;AACH,GATmC,EAUpC,CAAChD,KAAK,CAACN,MAAP,CAVoC,CAAxC;AAaA,SAAO,EACH,GAAGM,KADA;AAEHsC,IAAAA,UAFG;AAGHQ,IAAAA,kBAHG;AAIHH,IAAAA,UAJG;AAKHa,IAAAA,oBALG;AAMHtD,IAAAA,UANG;AAOHK,IAAAA,cAPG;AAQHsB,IAAAA,aARG;AASHO,IAAAA,OATG;AAUHzB,IAAAA,WAVG;AAWHG,IAAAA;AAXG,GAAP;AAaH,CAxNM;;GAAMjB,U;UAEKf,W,EACMA,W,EACDA,W","sourcesContent":["import { useContext, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport types from './reducer/type';\nimport { Product, IProduct, IStock } from '../../../../collections/product';\nimport { IWarehouse } from '../../../../collections/warehouse';\nimport { ProductState } from '../../pages/sales-counters/state/interface';\nimport productApi from '../../../../api/product-api';\nimport * as stockApi from '../../../../api/stock-api';\n\nimport { ProductContext } from './context';\n\nconst findWarehouseById = (warehouseId: string, warehouses: IWarehouse[]) => {\n    return warehouses.find((warehouse: IWarehouse) => warehouse._id === warehouseId) || warehouseId;\n};\n\nconst mapStockWithWarehouse = (stocks: IStock[], warehouses: IWarehouse[]) => {\n    return stocks.map((stock: IStock) => ({\n        ...stock,\n        warehouseId: findWarehouseById(stock.warehouseId, warehouses),\n    }));\n};\n\nexport const useProduct = () => {\n    const value = useContext(ProductContext);\n    const store = useSelector((state: any) => state.store.store);\n    const warehouseId = useSelector((state: any) => state.store.warehouseId);\n    const warehouses = useSelector((state: any) => state.store.warehouses);\n\n    const { state, dispatch } = value;\n\n    const setLoading = () => {\n        dispatch({\n            type: types.LOADING,\n        });\n    };\n\n    const setLoadingStocks = () => {\n        dispatch({\n            type: types.LOADING_STOCKS,\n        });\n    };\n\n    const searchProducts = async (text: string) => {\n        await dispatch({\n            type: types.CHANGE_SEARCH,\n            payload: text,\n        });\n\n        await getProducts({\n            search: text,\n            type: 'search',\n            page: 1,\n        });\n    };\n\n    const getDetailProduct = (productId: string) => {\n        return productApi.getProduct({\n            storeId: store._id,\n            productId,\n        });\n    };\n\n    const getProducts = async ({\n        search,\n        page,\n        type,\n    }: {\n        search?: string;\n        page: number;\n        type?: string;\n    }) => {\n        try {\n            const response = await productApi.getProducts({\n                storeId: store._id,\n                page,\n                limit: 20,\n                search,\n                warehouseId,\n                withQuantity: true,\n                variant: true,\n            });\n\n            const typeAction = type === 'search' ? types.SEARCH_PRODUCTS : types.LOAD_PRODUCTS;\n\n            dispatch({\n                type: typeAction,\n                payload: {\n                    products: response.data,\n                    total: response.total,\n                },\n            });\n        } catch (error) {\n            dispatch({\n                type: types.LOAD_PRODUCTS,\n                payload: [],\n            });\n        }\n    };\n\n    const selectProduct = (productSelected: any) => {\n        setLoadingStocks();\n        stockApi\n            .getStocks({ storeId: store._id, productId: productSelected._id })\n            .then((response: any) => {\n                const { data } = response;\n\n                const stocks = mapStockWithWarehouse(data, warehouses);\n                dispatch({\n                    type: types.SET_STOCK,\n                    payload: stocks,\n                });\n            })\n            .catch(() => {\n                dispatch({\n                    type: types.SET_STOCK,\n                    payload: [],\n                });\n            });\n        dispatch({\n            type: types.SELECT_PRODUCT,\n            payload: productSelected,\n        });\n    };\n\n    const setPage = async (page: number) => {\n        await dispatch({\n            type: types.SET_PAGE,\n            payload: page,\n        });\n\n        await getProducts({\n            search: state.search,\n            page: page,\n        });\n    };\n\n    const setProduct = useCallback(\n        (product: ProductState) => {\n            productApi\n                .getProduct({ storeId: store._id, productId: product._id })\n                .then((product: IProduct) => {\n                    dispatch({\n                        type: types.SET_PRODUCT,\n                        payload: product,\n                    });\n\n                    if (product.variants && product.variants.length) {\n                        setVariant(product.variants[0]);\n                    }\n                })\n                .catch(() => {\n                    dispatch({\n                        type: types.SET_PRODUCT,\n                        payload: undefined,\n                    });\n                });\n\n            setLoadingStocks();\n            stockApi\n                .getStocks({ storeId: store._id, parentId: product._id })\n                .then((response: any) => {\n                    const { data } = response;\n\n                    const stocks = mapStockWithWarehouse(data, warehouses);\n\n                    dispatch({\n                        type: types.SET_STOCK,\n                        payload: stocks,\n                    });\n                })\n                .catch(() => {\n                    dispatch({\n                        type: types.SET_STOCK,\n                        payload: [],\n                    });\n                });\n\n            // eslint-disable-next-line\n        },\n        [warehouses, store._id]\n    );\n\n    const getVariantQuantity = useCallback(\n        (variantId: string) => {\n            if (state.stocks.length === 0) return 0;\n\n            let targetStocks = state.stocks.filter(\n                (item: IStock) => item.productId._id === variantId\n            );\n\n            return targetStocks.reduce(\n                (prevValue: number, currValue: IStock) => prevValue + currValue.quantity,\n                0\n            );\n        },\n\n        // eslint-disable-next-line\n        [state.stocks]\n    );\n\n    const setVariant = useCallback(\n        (variant: Product) => {\n            dispatch({\n                type: types.SET_VARIANT,\n                payload: variant,\n            });\n\n            // eslint-disable-next-line\n        },\n        [warehouses]\n    );\n\n    const getStocksByVariantId = useCallback(\n        (variantId?: string) => {\n            if (state.stocks.length === 0 || !variantId) return [];\n\n            let targetStocks = state.stocks.filter(\n                (item: IStock) => item.productId._id === variantId\n            );\n\n            return targetStocks;\n        },\n        [state.stocks]\n    );\n\n    return {\n        ...state,\n        setProduct,\n        getVariantQuantity,\n        setVariant,\n        getStocksByVariantId,\n        setLoading,\n        searchProducts,\n        selectProduct,\n        setPage,\n        getProducts,\n        getDetailProduct,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}